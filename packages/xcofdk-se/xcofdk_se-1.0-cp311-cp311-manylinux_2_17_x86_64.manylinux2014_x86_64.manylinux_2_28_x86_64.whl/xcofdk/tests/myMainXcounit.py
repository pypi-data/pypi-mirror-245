# -*- coding: utf-8 -*-
# ------------------------------------------------------------------------------
# File   : myMainXcounit.py
#          (generated by XCoGen, XCOFDK Code Generator)
#
# Copyright (C) 2023 Farzad Safa
# All rights reserved.
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Import libs / modules
# ------------------------------------------------------------------------------
# fwapi
from xcofdk.fwapi.xcounit import MainXcoUnit
from xcofdk.fwapi.xcounit import XcoUnitProfile
from xcofdk.fwapi.xcounit import xlogif

from xcofdk.tests.myXcounit import MyXcoUnit
from xcofdk.tests.myXcounit import GetMyXcoUnitProfile as XuProfileGetter


# ------------------------------------------------------------------------------
# Interface
# ------------------------------------------------------------------------------
def GetMyXcoUnitProfile() -> XcoUnitProfile:
    """Return an instance of 'XcoUnitProfile' which can be passed to the c-tor of
    class 'MyMainXcoUnit' as depicted below:

        myMXU = MyMainXcoUnit(xcounitPrf_=GetMyXcoUnitProfile())
    """

    # create a default xcounit profile and properly set attribute values relevant for the returned instance of XcoUnitProfile
    res = XcoUnitProfile()

    res.aliasName = 'myMainXUnit'
    res.isPrivilegedXcoUnit = True
    res.isSyncExecutionRequired = True
    res.isInternalQueueEnabled = True
    res.isExternalQueueEnabled = True
    res.isExternalQueueBlocking = True
    res.cyclicMaxProcessingTimespanMS = 70
    res.cyclicRunPauseTimespanMS = 0
    return res
#END GetMyXcoUnitProfile()


class MyMainXcoUnit(MainXcoUnit):

    __slots__ = []

    def __init__(self, xcounitPrf_ : XcoUnitProfile =None):
        MainXcoUnit.__init__(self, xcounitPrf_=xcounitPrf_)
        
    def SetUpXcoUnit(self) -> bool:
        res = True # [ True | False | None]
        #tbd...
        return res
    
    def RunXcoUnit(self) -> bool:
        xlogif.XLogInfo(f'Starting main xcounit {self.xcounitUniqueID}...')
        myxu = MyXcoUnit(xcounitPrf_=XuProfileGetter())
        myxu.Start()
        myxu.Join()
        xlogif.XLogInfo(f'Done main xcounit {self.xcounitUniqueID}.')
        return False
    
    def TearDownXcoUnit(self) -> bool:
        res = True # [ True | False | None]
        #tbd...
        return res
#END class MyMainXcoUnit
