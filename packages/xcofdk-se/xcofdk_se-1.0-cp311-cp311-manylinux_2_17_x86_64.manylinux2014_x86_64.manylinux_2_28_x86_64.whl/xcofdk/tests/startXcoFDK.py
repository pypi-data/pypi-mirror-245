# -*- coding: utf-8 -*-
# ------------------------------------------------------------------------------
# File   : startXcoFDK.py
#          (generated by XCoGen, XCOFDK Code Generator)
#
# Copyright (C) 2023 Farzad Safa
# All rights reserved.
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Import libs / modules
# ------------------------------------------------------------------------------
from xcofdk               import fwapi
from xcofdk.fwapi.xcounit import xlogif

from xcofdk.tests.myMainXcounit import MyMainXcoUnit
from xcofdk.tests.myMainXcounit import GetMyXcoUnitProfile as MainXuProfile


# ------------------------------------------------------------------------------
# Interface
# ------------------------------------------------------------------------------
def GetXcoFwStartOptions() -> str:
    """Return a string which can be passed to framework's API in step 2 of 'Main()' below.
    """

    res  = ''
    res += '--disable-die-mode '
    res += '--disable-exception-mode '
    res += '--suppress-fw-warnings '
    res += '--log-level debug '
    res += '--user-config-file /home/farzad/tmp/xcogen/json/xcofw-user-config.json'
    return res
#END GetXcoFwStartOptions()


def Main():
    bAutoStartMXU = True

    # step 1: create main XcoUnit singleton
    myMXU = MyMainXcoUnit( xcounitPrf_=MainXuProfile() )

    # step 2: start framework
    mainXU = fwapi.StartXcoFW(fwStartMXU_=myMXU, bAutoStartMXU_=bAutoStartMXU, fwStartOptions_=GetXcoFwStartOptions())

    # step 3: failed to construct the singleton and/or to start framework?
    if mainXU is None:
        res = 1
    else:
        xlogif.XLogDebug('Some debug message...')

        # step 4: nothing to do, framework has been started successfully.
        #         Note that 'mainXU' is the singleton 'myMXU' passed to framework's API in step 2 above  !!
        pass

        # step 5: start main XcoUnit if not auto-started
        if not bAutoStartMXU:
            mainXU.Start()

        # step 6: join main XcoUnit
        mainXU.Join()

        # step 7: stop framework
        fwapi.StopXcoFW()

        # step 8: join framework, so program termination is synchronized to framework's shutdown execution
        bLcErrorFree = fwapi.JoinXcoFW()

        # step 9: check for the overall result of the execution of framework
        res = 2 if not bLcErrorFree else 0

    return res
#END Main()


# ------------------------------------------------------------------------------
# Execution
# ------------------------------------------------------------------------------
if __name__ == "__main__":
    exit(Main())
