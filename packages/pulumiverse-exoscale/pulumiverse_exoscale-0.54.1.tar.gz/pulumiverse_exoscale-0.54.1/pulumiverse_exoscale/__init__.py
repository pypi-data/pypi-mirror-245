# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .anti_affinity_group import *
from .compute_instance import *
from .database import *
from .domain import *
from .domain_record import *
from .elastic_ip import *
from .get_anti_affinity_group import *
from .get_compute_instance import *
from .get_compute_instance_list import *
from .get_database_uri import *
from .get_domain import *
from .get_domain_record import *
from .get_elastic_ip import *
from .get_iam_org_policy import *
from .get_iam_role import *
from .get_iamapi_key import *
from .get_instance_pool import *
from .get_instance_pool_list import *
from .get_nlb import *
from .get_nlb_service_list import *
from .get_private_network import *
from .get_security_group import *
from .get_sks_cluster import *
from .get_sks_cluster_list import *
from .get_sks_nodepool import *
from .get_sks_nodepool_list import *
from .get_template import *
from .get_zones import *
from .iam_access_key import *
from .iam_org_policy import *
from .iam_role import *
from .iamapi_key import *
from .instance_pool import *
from .nlb import *
from .nlb_service import *
from .private_network import *
from .provider import *
from .security_group import *
from .security_group_rule import *
from .sks_cluster import *
from .sks_kubeconfig import *
from .sks_nodepool import *
from .ssh_key import *
from ._inputs import *
from . import outputs

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumiverse_exoscale.config as __config
    config = __config
else:
    config = _utilities.lazy_import('pulumiverse_exoscale.config')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "exoscale",
  "mod": "index/antiAffinityGroup",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/antiAffinityGroup:AntiAffinityGroup": "AntiAffinityGroup"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/computeInstance",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/computeInstance:ComputeInstance": "ComputeInstance"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/database",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/database:Database": "Database"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/domain",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/domain:Domain": "Domain"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/domainRecord",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/domainRecord:DomainRecord": "DomainRecord"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/elasticIP",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/elasticIP:ElasticIP": "ElasticIP"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/iAMAPIKey",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/iAMAPIKey:IAMAPIKey": "IAMAPIKey"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/iAMAccessKey",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/iAMAccessKey:IAMAccessKey": "IAMAccessKey"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/iAMOrgPolicy",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/iAMOrgPolicy:IAMOrgPolicy": "IAMOrgPolicy"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/iAMRole",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/iAMRole:IAMRole": "IAMRole"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/instancePool",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/instancePool:InstancePool": "InstancePool"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/nLB",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/nLB:NLB": "NLB"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/nLBService",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/nLBService:NLBService": "NLBService"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/privateNetwork",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/privateNetwork:PrivateNetwork": "PrivateNetwork"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/sKSCluster",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/sKSCluster:SKSCluster": "SKSCluster"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/sKSKubeconfig",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/sKSKubeconfig:SKSKubeconfig": "SKSKubeconfig"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/sKSNodepool",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/sKSNodepool:SKSNodepool": "SKSNodepool"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/sSHKey",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/sSHKey:SSHKey": "SSHKey"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/securityGroup",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/securityGroup:SecurityGroup": "SecurityGroup"
  }
 },
 {
  "pkg": "exoscale",
  "mod": "index/securityGroupRule",
  "fqn": "pulumiverse_exoscale",
  "classes": {
   "exoscale:index/securityGroupRule:SecurityGroupRule": "SecurityGroupRule"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "exoscale",
  "token": "pulumi:providers:exoscale",
  "fqn": "pulumiverse_exoscale",
  "class": "Provider"
 }
]
"""
)
