[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "Toisto"
version = "0.14.1"
authors = [
  { name="Frank Niessink", email="frank@niessink.com" },
]
description = "Toisto is a command-line terminal app to practice languages."
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Education",
]
dependencies = [
    "gTTS == 2.4.0",
    "playsound == 1.3.0",
    "requests >= 2.28.0",
    "rich == 13.7.0",
    "rich-argparse == 1.4.0",
]

[project.optional-dependencies]
dev = [
    "build == 1.0.3",
    "coverage == 7.3.2",
    "green == 3.4.3",
    "mypy == 1.7.1",
    "pip == 23.3.1",
    "ruff == 0.1.6",
    "twine == 4.0.2",
    "types-playsound == 1.3.1.3",
    "types-requests == 2.31.0.10",
    "unittest-xml-reporting == 3.2.0",
    "vulture == 2.10",
]

[project.scripts]
toisto = "toisto.app:main"

[project.urls]
"Homepage" = "https://github.com/fniessink/toisto"
"Issue tracker" = "https://github.com/fniessink/toisto/issues"
"Changelog" = "https://github.com/fniessink/toisto/blob/main/CHANGELOG.md"

[tool.coverage.run]
branch = true
relative_files = true

[tool.coverage.report]
fail_under = 100
skip_covered = true

[tool.coverage.xml]
output = "build/coverage.xml"

[[tool.mypy.overrides]]
module = ["gtts"]
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"
line-length = 120
select = ["ALL"]
ignore = [
    "ANN101",  # Prevent 'Missing type annotation for `self` in method' errors
    "ANN102",  # Prevent 'Missing type annotation for `cls` in classmethod' errors
    "C408",    # Prevent 'Unnecessary `dict` call (rewrite as a literal)' errors
    "COM812",  # This rule may cause conflicts when used with the ruff formatter
    "D107",    # Prevent 'Missing docstring in `__init__`' errors
    "D203",    # Prevent warning about incompatible rules
    "D213",    # Prevent warning about incompatible rules
    "DTZ005",  # Prevent 'The use of `datetime.datetime.now()` without `tz` argument is not allowed' errors
    "FBT003",  # Prevent 'Boolean positional value in function call' errors
    "ISC001",  # This rule may cause conflicts when used with the ruff formatter
    "PT",      # We don't use Pytest
    "TCH001",  # Prevent 'Move application import `...` into a type-checking block' errors
    "TCH002",  # Prevent 'Move third-party import `...` into a type-checking block' errors
    "TCH003",  # Prevent 'Move standard library import `...` into a type-checking block' errors
    "TID252",  # Prevent 'Relative imports from parent modules are banned' errors
]

[tool.ruff.isort]
section-order = ["future", "standard-library", "third-party", "second-party", "first-party", "local-folder"]

[tool.ruff.isort.sections]
"second-party" = ["toisto"]

[tool.ruff.per-file-ignores]
"src/toisto/app.py" = ["E402"]
"src/toisto/ui/speech.py" = ["FBT001", "FBT002"]
"__init__.py" = ["D104"]
"tests/*" = ["ANN201"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.json"]
languages = ["*.txt"]
