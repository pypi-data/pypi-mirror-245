[project]
name = "ao_conventional_pre_commit"
dynamic = ["version"]
description = "An AO-customized pre-commit hook that checks commit messages for Conventional Commits formatting and JIRA ticket."
readme = "README.md"
license = { file = "LICENSE" }
classifiers = ["Programming Language :: Python :: 3 :: Only"]
keywords = ["git", "pre-commit", "ao-conventional-commits"]
authors = [
    { name = "Kevin Castro", email = "kevin@anderstonopt.com"}
]
requires-python = ">=3.8"
dependencies = []

[project.urls]
code = "https://github.com/anderson-optimization/ao-conventional-pre-commit"
tracker = "https://github.com/anderson-optimization/ao-conventional-pre-commit/issues"

[project.optional-dependencies]
dev = [
    "black",
    "build",
    "coverage",
    "flake8",
    "pre-commit",
    "pytest",
    "setuptools_scm",
]

[project.scripts]
ao-conventional-pre-commit = "ao_conventional_pre_commit.hook:main"

[build-system]
requires = ["setuptools>=65", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 127
target-version = ['py311']
include = '\.pyi?$'

[tool.coverage.run]
branch = true
relative_files = true
source = ["ao_conventional_pre_commit"]

[tool.pyright]
include = ["ao_conventional_pre_commit", "tests"]

[tool.pytest.ini_options]
testpaths = ["tests"]
norecursedirs = [
    "*.egg-info",
    ".git",
    ".pytest_cache",
    ".vscode",
]

[tool.setuptools]
packages = ["ao_conventional_pre_commit"]

[tool.setuptools_scm]
# intentionally left blank, but we need the section header to activate the tool
