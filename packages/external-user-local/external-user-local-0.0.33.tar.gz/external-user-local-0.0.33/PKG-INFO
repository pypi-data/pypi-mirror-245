Metadata-Version: 2.1
Name: external-user-local
Version: 0.0.33
Home-page: https://github.com/circles-zone/external-user-local-python-package
Author: Circles
Author-email: info@circles.life
Classifier: Programming Language :: Python :: 3
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
Requires-Dist: logger-local>=0.0.60
Requires-Dist: database-without-orm-local>=0.0.83

# External User Local Python Package

The External User Local Python Package is a library designed to manage access tokens for external users. It provides functions to insert, update, retrieve, and delete access tokens from a database. This library is intended to be used in conjunction with your own project.

## Installation

-pip install external-user-local 0.0.25
-add to requirements.txt external-user-local== 0.0.25

# Importing the Library
from library import library_DB import Accsess_Token_Library
# Usage Example: assuming system_id=1
# Initialize the access token library
all methods are static, no initialize required

# Insert a new access token
ExternalUser.insert_or_update_external_user_access_token("example_user", 123,1, "example_token","example_expiry","example refresh")
notice! refresh and expiry arent a mandatory 
# Update an existing access token
ExternalUser.update_user_external(123, "updated_token")

# Retrieve an access token by profile ID
access_token = ExternalUser.get_access_token_by_profile_id(123)

# Retrieve an access token by user name
access_token = ExternalUser.get_access_token_by_user_name("example_user",1)

# Delete an access token by profile ID
ExternalUser.delete_access_token_by_profile_id(123)

# Update an existing access token by username
ExternalUser.update_user_external_by_user_name("example_user",1, "new_token")

