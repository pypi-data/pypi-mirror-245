import{b0 as g,d as b,M as k,U as v,Z as I,I as S,ah as N,g as x,j as D,u as e,c as F,k as m,a as U,o as B,m as p,b1 as J,b2 as M,b3 as O,ac as d,b4 as T,a_ as i}from"./index-r9K2gvRd.js";import{u as V}from"./usePageTitle-zemXobBV.js";class P extends g{parse(t){return JSON.parse(decodeURIComponent(t??""))}format(t){return encodeURIComponent(JSON.stringify(t))}}const z=b({__name:"FlowRunCreate",setup(f){const t=k(),n=v("deploymentId"),s=I(),y=S("parameters",P,void 0),{deployment:o}=N(n),_=async r=>{var u,a;try{const c=await t.deployments.createDeploymentFlowRun(n.value,r),l=((a=(u=r.state)==null?void 0:u.stateDetails)==null?void 0:a.scheduledTime)??void 0,C=!l,h=T(O,{flowRun:c,flowRunRoute:d.flowRun,router:s,immediate:C,startTime:l});i(h,"success"),s.push(d.deployment(n.value))}catch(c){i("Something went wrong trying to create a flow run","error"),console.error(c)}},w=()=>{s.back()},R=x(()=>o.value?`Create Flow Run for Deployment: ${o.value.name}`:"Create Flow Run for Deployment");return V(R),(r,u)=>{const a=D("p-layout-default");return e(o)?(B(),F(a,{key:0},{header:m(()=>[p(e(J),{deployment:e(o)},null,8,["deployment"])]),default:m(()=>[p(e(M),{deployment:e(o),parameters:e(y),onSubmit:_,onCancel:w},null,8,["deployment","parameters"])]),_:1})):U("",!0)}}});export{z as default};
