name: Publish Python Package To Pypi

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  author: "lgf4591"
  email: "lgf4591@outlook.com"
  python_version: "3.11"

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}
          cache: 'pip' # caching pip dependencies
      - run: pip --version
      - name: Install Independences
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Run lint code
        run: |
          python -m mypy src/ tests/
          python -m ruff check .
  
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}
          cache: 'pip'
      - run: pip --version
      - name: Install Independences
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
      - name: Run format code
        run: |
          python -m ruff format .
          python -m ruff check . --fix

  test:
    runs-on: ${{ matrix.os }}
    if: ${{ success() }}
    needs: [ lint, format ]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}
          cache: 'pip'
      - run: pip --version
      - name: Install Independences
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -e .

      - name: Run Pytest
        run: python -m pytest

  test_pypi_release:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: [ test ]
    steps:
      - name: Checkout code with all branchs and tags
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}
          cache: 'pip'
      - run: pip --version
      - name: Install Independences
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
      # - name: Publish package to pypi
      #   uses: pypa/gh-action-pypi-publish@v1.8.10
      #   with:
      #     user: __token__
      #     password: ${{ secrets.TEST_PYPI_API_KEY }}
      #     repository-url: https://test.pypi.org/legacy/
      - name: Publish package to pypi
        run: |
          python -m build
          python -m twine upload dist/* --config-file .pypirc
