Metadata-Version: 2.1
Name: fluxo-core
Version: 0.5.0
Summary: Simple data flow with execution in separate threads and easy scheduling configuration.
Author-email: Mailson NÃ¡scin <mailson.nascin@gmail.com>
License: MIT
Project-URL: Homepage, https://github.com/nascin/fluxo-core
Project-URL: Source Code, https://github.com/nascin/fluxo-core
Project-URL: Bug Tracker, https://github.com/nascin/fluxo-core/issues
Keywords: fluxo,fluxo-core,data,scheduler
Classifier: Programming Language :: Python :: 3
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Internationalization
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: schedule ==1.2.1

# Fluxo

### Simple data flow with execution in separate threads and easy scheduling configuration.

# Installation

To use the `fluxo-core` library, you can install it using the pip command. Make sure you have Python and pip installed before proceeding.

```
pip install fluxo-core
```

# How to Use

### 1 - Create a folder in the project root:

First, create a folder named `python_files` at the root of your project. This folder will contain your Python files.

### 2 - Create a Python file within the python_files folder:

Now, create a Python file named fluxo1.py within the python_files folder. This is where you can write your Python code.

### 3 - Write the code:

Write the following code in the fluxo1.py file to create a basic flow with a task:

#### python_files/fluxo1.py:

```
from fluxo_core.fluxo import Fluxo
from fluxo_core.task import Task

fluxo = Fluxo(
    name='Fluxo 1',
    interval={'minutes': 1, 'at': ':10'})


@Task('Tarefa 1', fluxo=fluxo)
async def my_func():
    print('my_func being executed')
```

### 4 - Finally, start the program with the command below:

```
python -m fluxo_core.init
```
