[build-system]
requires = ["setuptools>=48", "setuptools_scm[toml]>=6.3.1"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/dql/_version.py"

[tool.pytest.ini_options]
addopts = "-ra -m 'not benchmark'"
markers = [
    "benchmark: benchmarks.",
]
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
source = ["dql", "tests"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "if typing.TYPE_CHECKING:",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "raise AssertionError",
    "@overload",
]

[tool.mypy]
# Error output
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true
pretty = true
check_untyped_defs = false
# Warnings
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
ignore_missing_imports = true
files = ["src", "tests"]
exclude = ["src/dql/vendored"]

[tool.codespell]
ignore-words-list = " "

[tool.ruff]
exclude = ["src/dql/vendored"]
ignore = [
    "S101", # assert
    "PLR2004", # magic-value-comparison
    "PLW2901", # redefined-loop-name
]
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "C90", # mccabe
    "W", # pycodestyle - Warning
    "E", # pycodestyle - Error
    "F", # pyflakes
    "I", # isort
    "T10", # flake8-debugger
    "S", # flake8-bandit
    "PL", # pylint
    "TCH", # flake8-type-checking
    "UP", # pyupgrade
    "N", # pep8-naming
    "PIE", # flake8-pie
]
show-source = true
show-fixes = true

[tool.ruff.format]
exclude = ["src/dql/vendored"]

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.isort]
known-first-party = ["dql"]

[tool.ruff.lint.pylint]
max-args = 16
max-branches = 16
max-public-methods = 32
max-statements = 64

[tool.ruff.mccabe]
max-complexity = 15
