# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/ptyp',
                'doc_host': 'https://dsm-72.github.io',
                'git_url': 'https://github.com/dsm-72/ptyp',
                'lib_path': 'ptyp'},
  'syms': { 'ptyp.grds': { 'ptyp.grds.aliascheck': ('grds.html#aliascheck', 'ptyp/grds.py'),
                           'ptyp.grds.checknan': ('grds.html#checknan', 'ptyp/grds.py'),
                           'ptyp.grds.eqlist': ('grds.html#eqlist', 'ptyp/grds.py'),
                           'ptyp.grds.eqliteral': ('grds.html#eqliteral', 'ptyp/grds.py'),
                           'ptyp.grds.eqtuple': ('grds.html#eqtuple', 'ptyp/grds.py'),
                           'ptyp.grds.eqtype': ('grds.html#eqtype', 'ptyp/grds.py'),
                           'ptyp.grds.equnion': ('grds.html#equnion', 'ptyp/grds.py'),
                           'ptyp.grds.guard': ('grds.html#guard', 'ptyp/grds.py'),
                           'ptyp.grds.isallsame': ('grds.html#isallsame', 'ptyp/grds.py'),
                           'ptyp.grds.isop': ('grds.html#isop', 'ptyp/grds.py'),
                           'ptyp.grds.isstrbytes': ('grds.html#isstrbytes', 'ptyp/grds.py'),
                           'ptyp.grds.isstrq': ('grds.html#isstrq', 'ptyp/grds.py'),
                           'ptyp.grds.notiterstr': ('grds.html#notiterstr', 'ptyp/grds.py'),
                           'ptyp.grds.notstrbytes': ('grds.html#notstrbytes', 'ptyp/grds.py'),
                           'ptyp.grds.tclassvar': ('grds.html#tclassvar', 'ptyp/grds.py'),
                           'ptyp.grds.tdict': ('grds.html#tdict', 'ptyp/grds.py'),
                           'ptyp.grds.tgeneric': ('grds.html#tgeneric', 'ptyp/grds.py'),
                           'ptyp.grds.tlist': ('grds.html#tlist', 'ptyp/grds.py'),
                           'ptyp.grds.tliteral': ('grds.html#tliteral', 'ptyp/grds.py'),
                           'ptyp.grds.trychecks': ('grds.html#trychecks', 'ptyp/grds.py'),
                           'ptyp.grds.tryiter': ('grds.html#tryiter', 'ptyp/grds.py'),
                           'ptyp.grds.tset': ('grds.html#tset', 'ptyp/grds.py'),
                           'ptyp.grds.ttuple': ('grds.html#ttuple', 'ptyp/grds.py'),
                           'ptyp.grds.ttype': ('grds.html#ttype', 'ptyp/grds.py'),
                           'ptyp.grds.tunion': ('grds.html#tunion', 'ptyp/grds.py')},
            'ptyp.meta': { 'ptyp.meta.Alias': ('meta.html#alias', 'ptyp/meta.py'),
                           'ptyp.meta.AliasMeta': ('meta.html#aliasmeta', 'ptyp/meta.py'),
                           'ptyp.meta.AliasMeta.getbtype': ('meta.html#aliasmeta.getbtype', 'ptyp/meta.py'),
                           'ptyp.meta.Not': ('meta.html#not', 'ptyp/meta.py'),
                           'ptyp.meta.NotMeta': ('meta.html#notmeta', 'ptyp/meta.py'),
                           'ptyp.meta.NotMeta.check': ('meta.html#notmeta.check', 'ptyp/meta.py'),
                           'ptyp.meta.NotMeta.default_kwds': ('meta.html#notmeta.default_kwds', 'ptyp/meta.py'),
                           'ptyp.meta.NotMeta.getbtype': ('meta.html#notmeta.getbtype', 'ptyp/meta.py'),
                           'ptyp.meta.Opt': ('meta.html#opt', 'ptyp/meta.py'),
                           'ptyp.meta.OptionalMeta': ('meta.html#optionalmeta', 'ptyp/meta.py'),
                           'ptyp.meta.OptionalMeta.__new__': ('meta.html#optionalmeta.__new__', 'ptyp/meta.py'),
                           'ptyp.meta.OptionalMeta.default_kwds': ('meta.html#optionalmeta.default_kwds', 'ptyp/meta.py'),
                           'ptyp.meta.OptionalMeta.getbtype': ('meta.html#optionalmeta.getbtype', 'ptyp/meta.py'),
                           'ptyp.meta.ProtoType': ('meta.html#prototype', 'ptyp/meta.py'),
                           'ptyp.meta.ProtoType.__init_subclass__': ('meta.html#prototype.__init_subclass__', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta': ('meta.html#protocolbasemeta', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.__call__': ('meta.html#protocolbasemeta.__call__', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.__instancecheck__': ('meta.html#protocolbasemeta.__instancecheck__', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.__new__': ('meta.html#protocolbasemeta.__new__', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.check': ('meta.html#protocolbasemeta.check', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.classname': ('meta.html#protocolbasemeta.classname', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.default_kwds': ('meta.html#protocolbasemeta.default_kwds', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.getbtype': ('meta.html#protocolbasemeta.getbtype', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.makebases': ('meta.html#protocolbasemeta.makebases', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.makeguard': ('meta.html#protocolbasemeta.makeguard', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.qualname': ('meta.html#protocolbasemeta.qualname', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.setattrs': ('meta.html#protocolbasemeta.setattrs', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.setbtype': ('meta.html#protocolbasemeta.setbtype', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.settypes': ('meta.html#protocolbasemeta.settypes', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolMeta': ('meta.html#protocolmeta', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolMeta.getbtype': ('meta.html#protocolmeta.getbtype', 'ptyp/meta.py')},
            'ptyp.prot': { 'ptyp.prot.Alias': ('prot.html#alias', 'ptyp/prot.py'),
                           'ptyp.prot.Alias.__init_subclass__': ('prot.html#alias.__init_subclass__', 'ptyp/prot.py'),
                           'ptyp.prot.Not': ('prot.html#not', 'ptyp/prot.py'),
                           'ptyp.prot.Not.__init_subclass__': ('prot.html#not.__init_subclass__', 'ptyp/prot.py'),
                           'ptyp.prot.Opt': ('prot.html#opt', 'ptyp/prot.py'),
                           'ptyp.prot.Opt.__init_subclass__': ('prot.html#opt.__init_subclass__', 'ptyp/prot.py'),
                           'ptyp.prot.Proto': ('prot.html#proto', 'ptyp/prot.py'),
                           'ptyp.prot.Proto.__init_subclass__': ('prot.html#proto.__init_subclass__', 'ptyp/prot.py')},
            'ptyp.ptyp': { 'ptyp.ptyp.IntQ': ('ptyp.html#intq', 'ptyp/ptyp.py'),
                           'ptyp.ptyp.NotStrBytes': ('ptyp.html#notstrbytes', 'ptyp/ptyp.py'),
                           'ptyp.ptyp.StrBytes': ('ptyp.html#strbytes', 'ptyp/ptyp.py'),
                           'ptyp.ptyp.StrQ': ('ptyp.html#strq', 'ptyp/ptyp.py'),
                           'ptyp.ptyp.isallsame': ('ptyp.html#isallsame', 'ptyp/ptyp.py'),
                           'ptyp.ptyp.notiterstr': ('ptyp.html#notiterstr', 'ptyp/ptyp.py')},
            'ptyp.type': {},
            'ptyp.util': { 'ptyp.util.args2strs': ('util.html#args2strs', 'ptyp/util.py'),
                           'ptyp.util.classname': ('util.html#classname', 'ptyp/util.py'),
                           'ptyp.util.guardanns': ('util.html#guardanns', 'ptyp/util.py'),
                           'ptyp.util.guarddocs': ('util.html#guarddocs', 'ptyp/util.py'),
                           'ptyp.util.guardname': ('util.html#guardname', 'ptyp/util.py'),
                           'ptyp.util.guardtype': ('util.html#guardtype', 'ptyp/util.py'),
                           'ptyp.util.optargname': ('util.html#optargname', 'ptyp/util.py'),
                           'ptyp.util.qualname': ('util.html#qualname', 'ptyp/util.py'),
                           'ptyp.util.setguardattrs': ('util.html#setguardattrs', 'ptyp/util.py'),
                           'ptyp.util.settypes': ('util.html#settypes', 'ptyp/util.py'),
                           'ptyp.util.types2opts': ('util.html#types2opts', 'ptyp/util.py'),
                           'ptyp.util.typescsv': ('util.html#typescsv', 'ptyp/util.py'),
                           'ptyp.util.typesusv': ('util.html#typesusv', 'ptyp/util.py')}}}
