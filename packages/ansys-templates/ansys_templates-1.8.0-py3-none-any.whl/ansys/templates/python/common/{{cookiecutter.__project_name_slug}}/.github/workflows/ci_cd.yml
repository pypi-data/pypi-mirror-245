name: CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '{{ cookiecutter.__requires_python }}'
  DOCUMENTATION_CNAME: '{{ cookiecutter.__product_name_slug }}.docs.pyansys.com'
  LIBRARY_NAME: '{{ cookiecutter.__pkg_namespace | replace(".", "-") }}'
  LIBRARY_NAMESPACE: '{{ cookiecutter.__pkg_namespace }}'

concurrency:
  group: {{ '${{ github.workflow }}-${{ github.ref }}' }}
  cancel-in-progress: true

jobs:

  code-style:
    name: "Code style"
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/code-style@v4
        with:
          python-version: {{ '${{ env.MAIN_PYTHON_VERSION }}' }}

  doc-style:
    name: "Documentation style"
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/doc-style@v4
        with:
          token: {{ '${{ secrets.GITHUB_TOKEN }}' }}

  smoke-tests:
    name: "Build and Smoke tests"
    runs-on: {{ '${{ matrix.os }}' }}
    needs: [code-style]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        {% set required_minor = cookiecutter.__requires_python[2:] | int %}
        {%- set python_versions = [ ] -%}
        {%- for minor in range(7, 11) -%}
        {%- if minor >= required_minor -%}
        {{ python_versions.append("3." + minor | string ) or ''}}
        {%- endif -%}
        {%- endfor -%}
        python-version: {{ python_versions }}
    steps:
      - uses: ansys/actions/build-wheelhouse@v4
        with:
          library-name: {{ '${{ env.LIBRARY_NAME }}' }}
          library-namespace: {{ '${{ env.LIBRARY_NAMESPACE }}' }}
          operating-system: {{ '${{ matrix.os }}' }}
          python-version: {{ '${{ matrix.python-version }}' }}

  tests:
    name: "Tests"
    runs-on: {{ '${{ matrix.os }}' }}
    needs: [smoke-tests]
    strategy:
      matrix:
       os: [ubuntu-latest, windows-latest]
       {% set required_minor = cookiecutter.__requires_python[2:] | int %}
       {%- set python_versions = [ ] -%}
       {%- for minor in range(7, 11) -%}
       {%- if minor >= required_minor -%}
       {{ python_versions.append("3." + minor | string ) or ''}}
       {%- endif -%}
       {%- endfor -%}
       python-version: {{ python_versions }}
      fail-fast: false
    steps:
      - uses: ansys/actions/tests-pytest@v4
        with:
          pytest-extra-args: "--cov=ansys --cov-report=term --cov-report=html:.cov/html"

  doc-build:
    name: "Build documentation"
    runs-on: ubuntu-latest
    needs: [doc-style]
    steps:
      - uses: ansys/actions/doc-build@v4
        with:
          python-version: {{ '${{ env.MAIN_PYTHON_VERSION }}' }}

  build-library:
    name: "Build library basic example"
    runs-on: ubuntu-latest
    needs: [doc-build, tests]
    steps:
      - uses: ansys/actions/build-library@v4
        with:
          library-name: {{ '${{ env.LIBRARY_NAME }}' }}
          python-version: {{ '${{ env.MAIN_PYTHON_VERSION }}' }}

  doc-deploy-dev:
    name: "Deploy development documentation"
    runs-on: ubuntu-latest
    needs: [build-library]
    if: github.event_name == 'push' && !contains(github.ref, 'refs/tags')
    steps:
      - uses: ansys/actions/doc-deploy-dev@v4
        with:
          cname: {{ '${{ env.DOCUMENTATION_CNAME }}' }}
          token: {{ '${{ secrets.GITHUB_TOKEN }}' }}

  doc-deploy-stable:
    name: "Deploy stable documentation"
    runs-on: ubuntu-latest
    needs: [build-library]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    steps:
      - uses: ansys/actions/doc-deploy-stable@v4
        with:
          cname: {{ '${{ env.DOCUMENTATION_CNAME }}' }}
          token: {{ '${{ secrets.GITHUB_TOKEN }}' }}


