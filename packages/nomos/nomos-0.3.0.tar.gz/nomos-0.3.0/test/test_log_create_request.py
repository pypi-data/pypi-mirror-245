# coding: utf-8

"""
    Nomos API

    For more information on the Nomos API, please refer to the documentation at https://getnomos.com/docs/api.

    The version of the OpenAPI document: 0.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nomos.api_resources.models.log_create_request import LogCreateRequest


class TestLogCreateRequest(unittest.TestCase):
    """LogCreateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LogCreateRequest:
        """Test LogCreateRequest
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `LogCreateRequest`
        """
        model = LogCreateRequest()
        if include_optional:
            return LogCreateRequest(
                log_id = 'bf6f683e-5bc4-4d7f-b480-62cd4dc075ed',
                group_id = '1871a740-9d00-4bfe-8dd1-ca0472897327',
                provider = 'openai',
                model = 'gpt-3.5-turbo',
                request_path = '/v1/chat/completions',
                request_body = {"model":"gpt-3.5-turbo","messages":[{"role":"system","content":"You are a helpful assistant."},{"role":"user","content":"Hello!"}],"temperature":1,"top_p":1,"n":1,"stream":true,"stop":null,"max_tokens":256},
                response_status = 200,
                response = {"id":"chatcmpl-123","object":"chat.completion","created":1677652288,"model":"gpt-3.5-turbo-0613","choices":[{"index":0,"message":{"role":"assistant","content":"\n\nHello there, how may I assist you today?"},"finish_reason":"stop"}],"usage":{"prompt_tokens":9,"completion_tokens":12,"total_tokens":21}},
                request_start_time = '2022-12-06T22:35:49Z',
                request_end_time = '2022-12-06T22:36:01Z',
                tags = {"foo":"bar","thumb_up":true,"cohort":3,"user":"edmund","user_id":12345,"prompt_type":"concise","development":null},
                project_id = '',
                project_version_id = 'f6a123f1-6320-1ee2-845e-12da139a12ed',
                variables_dataset_id = 'f6a123f1-6320-1ee2-845e-12da139a12ed',
                parent_log_id = 'bf6f683e-5bc4-4d7f-b480-62cd4dc075ed',
                variables = {"state":"California"}
            )
        else:
            return LogCreateRequest(
                log_id = 'bf6f683e-5bc4-4d7f-b480-62cd4dc075ed',
                group_id = '1871a740-9d00-4bfe-8dd1-ca0472897327',
                provider = 'openai',
                model = 'gpt-3.5-turbo',
                request_path = '/v1/chat/completions',
                request_body = {"model":"gpt-3.5-turbo","messages":[{"role":"system","content":"You are a helpful assistant."},{"role":"user","content":"Hello!"}],"temperature":1,"top_p":1,"n":1,"stream":true,"stop":null,"max_tokens":256},
                response_status = 200,
                response = {"id":"chatcmpl-123","object":"chat.completion","created":1677652288,"model":"gpt-3.5-turbo-0613","choices":[{"index":0,"message":{"role":"assistant","content":"\n\nHello there, how may I assist you today?"},"finish_reason":"stop"}],"usage":{"prompt_tokens":9,"completion_tokens":12,"total_tokens":21}},
                request_start_time = '2022-12-06T22:35:49Z',
                request_end_time = '2022-12-06T22:36:01Z',
        )
        """

    def testLogCreateRequest(self):
        """Test LogCreateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
