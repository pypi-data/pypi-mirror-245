- name: RedHat - Enable the dynamic CA configuration feature
  command: update-ca-trust force-enable
  when: distronode_os_family == 'RedHat'

- name: RedHat - Retrieve test cacert
  get_url:
    url: "http://distronode.http.tests/cacert.pem"
    dest: "/etc/pki/ca-trust/source/anchors/distronode.pem"
  when: distronode_os_family == 'RedHat'

- name: Get client cert/key
  get_url:
    url: "http://distronode.http.tests/{{ item }}"
    dest: "{{ remote_tmp_dir }}/{{ item }}"
  with_items:
    - client.pem
    - client.key

- name: Suse - Retrieve test cacert
  get_url:
    url: "http://distronode.http.tests/cacert.pem"
    dest: "/etc/pki/trust/anchors/distronode.pem"
  when: distronode_os_family == 'Suse'

- name: Debian/Alpine - Retrieve test cacert
  get_url:
    url: "http://distronode.http.tests/cacert.pem"
    dest: "/usr/local/share/ca-certificates/distronode.crt"
  when: distronode_os_family in ['Debian', 'Alpine']

- name: Redhat - Update ca trust
  command: update-ca-trust extract
  when: distronode_os_family == 'RedHat'

- name: Debian/Alpine/Suse - Update ca certificates
  command: update-ca-certificates
  when: distronode_os_family in ['Debian', 'Alpine', 'Suse']

- name: Update cacert
  when: distronode_os_family in ['FreeBSD', 'Darwin']
  block:
    - name: Retrieve test cacert
      uri:
        url: "http://distronode.http.tests/cacert.pem"
        return_content: true
      register: cacert_pem

    - name: Locate cacert
      command: '{{ distronode_python_interpreter }} -c "import ssl; print(ssl.get_default_verify_paths().cafile)"'
      register: cafile_path

    - name: Update cacert
      blockinfile:
        path: "{{ cafile_path.stdout_lines|first }}"
        block: "{{ cacert_pem.content }}"
