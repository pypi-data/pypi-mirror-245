Metadata-Version: 2.1
Name: ll-la
Version: 0.24
Summary: Python API for LivingApps
Home-page: http://github.com/LivingLogic/LivingApps.Python.LivingAPI
Author: Walter Doerwald
Author-email: walter@livinglogic.de
License: MIT
Keywords: LivingApps
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
License-File: LICENSE.txt
Requires-Dist: ll-xist (>=5.75)
Requires-Dist: requests (>=2.21.0)
Requires-Dist: geocoder (>=1.30.1)
Requires-Dist: Pillow (>=6.1.0)
Requires-Dist: validators (>=0.18.2)
Provides-Extra: db
Requires-Dist: cx-Oracle (>=8.0) ; extra == 'db'
Requires-Dist: psycopg[binary] (>=3.0.5) ; extra == 'db'

``ll.la`` provides a Python API for the LivingApps system
(see http://www.living-apps.de/ or http://www.living-apps.com/ for more info).

``ll.la`` allows you to fetch the configured data sources from a template,
create new records, and update and delete existing records all from your Python
prompt (or script).

For more info about LivingApps and this Python SDK, see
https://my.living-apps.de/docs/PythonSDK.html (in german).


HEAD (2023-??-??)
-------------------

* Merged attributes ``iconsmall`` and ``iconlarge`` of ``App`` objects
  into ``image``.

* Merged attributes ``avatarsmall`` and ``avatarlarge`` of ``User``
  objects into ``image``.

* Merged attributes ``original`` and ``scaled`` of ``ImageLayoutControl``
  objects into ``image``.

* Added attribute ``z_index`` to ``Control``, ``ViewControl`` and
  ``LayoutControl``.

* Added attribute ``MenuItem.accessible``.

* Update upload handling to support a world without ``uploadref``.

* Add methods ``home_url()``, ``datamanagement_url()``, ``import_url()``,
  ``tasks_url()``, ``datamanagement_config_url()``, ``permissions_url()`` and
  ``datamanageview_url()`` to class ``App`` which return the relative URLs
  for the respective menus.

* Add methods ``my_apps_url()``, ``my_tasks_url()``, ``catalog_url()``,
  ``chats_url()``, ``profile_url()``, ``account_url()`` and ``logout_url()``
  to class ``Globals`` which return the relative URLs for the respective
  menus.

* Added attribute ``View.focus_control`` and method
  ``View.focus_first_control()``.

* Added method ``Control.is_focused()``.

* Add field errors to the record if we have an active view and the field
  is not in the active view. This avoids problems with invisible errors in the
  form.

* ``Control.in_active_view()`` is a method now.

* Added method ``App.seq()``.

* Added ``Field`` subclasses (one for each control type).

* Allow setting the attributes ``Globals.pv_*`` and ``App.pv_*``.


