[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
preview = true

[tool.isort]
line_length = 120
case_sensitive = true
profile = "black"
src_paths = ["."]

[tool.pytest.ini_options]
addopts = "--cov=. --cov-context=test --durations=0 --durations-min=1.0"
asyncio_mode = "auto"

[tool.pylint]
ignored-classes=["twisted.internet.reactor"]
ignore-paths=["docs/"]

[tool.pylint."messages control"]
disable = [
    "C0103", # Argument name "xyz" doesn't conform to snake_case naming style
    "C0301", # Line too long. This is handled by black
#    # To be removed:
    "C0114", # Missing module docstring
    "C0115", # Missing class docstring
    "C0116", # Missing function or method docstring
    "C0302", # Too many lines in module
    "R0801", # Similar lines in 2 files
    "R0902", # Too many instance attributes
    "R0903", # Too few public methods
    "R0904", # Too many public methods
    "R0913", # Too many arguments
    "R0914", # Too many local variables
    "W0511", # TODO
    "W0621", # redefined-outer-name
]

[tool.ruff]
target-version = 'py39'
# See complete list : https://beta.ruff.rs/docs/rules
select = [
#    "F",     # pyflakes
#    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "C90",   # mccabe
#    "N",     # pep8-naming
    "UP",    # pyupgrade
    "YTT",   # flake8-2020
    "CPY",   # Copyright-related rules
    "C4",    # flake8-comprehensions
    "T10",   # flake8-debugger
    "DJ",    # flake8-django
    "EXE",   # flake8-executable
    "FA",    # flake8-future-annotations
    "ISC",   # flake8-implicit-str-concat
    "ICN",   # flake8-import-conventions
    "INP",   # flake8-no-pep420
    "PIE",   # flake8-pie
    "T20",   # flake8-print
#    "PYI",   # flake8-pyi
#    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise
#    "SLF",   # flake8-self
    "SLOT",  # flake8-slots
#    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
    "TCH",   # flake8-type-checking
    "INT",   # flake8-gettext
    "PD",    # pandas-vet
    "PLC",   # pylint-convention
    "PLE",   # pylint-errors
    "PLW",   # pylint-warnings
    "FLY",   # flynt
    "NPY",   # numpy-specific rules
    "AIR",   # airflow
]

fixable = [
    "PIE",
    "PT",
    "C4",
    "SIM",
    "SIM",
    "UP",
]

# Never enforce some rules
ignore = [
    "E501", # line length violations
]

## Ignore some rules for some files
[tool.ruff.per-file-ignores]
"**/*test*.py" = [
    "SLF001", # Private member accessed
    "T201", # print found
]

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true