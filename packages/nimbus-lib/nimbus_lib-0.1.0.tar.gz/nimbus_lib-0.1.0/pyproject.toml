[project]
name = "nimbus-lib"
version = "0.1.0"
description = "Library wrapping AWS CDK primitives in a useful way."
authors = [
    { name = "Matt White", email = "mail@matt-w.net" }
]
dependencies = [
    "structlog~=23.1.0",
    "python-dotenv~=1.0.0",
    "pydantic~=1.10.9",
    "aws-cdk-lib~=2.84.0",
    "constructs~=10.2.52",
]
readme = "README.md"
requires-python = ">= 3.10"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = ["black~=23.3.0", "flake8~=5.0.4", "pyright~=1.1.314", "ruff~=0.0.272", "isort~=5.12.0", "bandit~=1.7.5", "pytest~=7.3.2", "pylint~=2.17.4", "ipdb~=0.13.13"]


[tool.rye.scripts]
"fmt:black" = "black . --preview -l 79"
"lint:ruff" = "ruff check src"
"lint:ruff-tests" = "ruff check tests --ignore F811,F403"
"lint:flake8" = "flake8 src/"
"lint:flake8-tests" = "flake8 tests/ --ignore F401,F811,F403"
"lint:bandit" = "bandit -r src/"
"lint:pylint" = "pylint src/"
"lint:pylint-tests" = "pylint tests/ --disable=W0613,W0621"
"lint:pyright" = { cmd = "pyright", env = { PYRIGHT_PYTHON_FORCE_VERSION = "latest" } }
"lint" = { chain = [ "lint:ruff", "lint:ruff-tests", "lint:flake8", "lint:flake8-tests", "lint:pyright", "lint:bandit", "lint:pylint", "lint:pylint-tests" ] }
"typecheck" = { chain = [ "lint:pyright" ]}
"fmt" = { chain = [ "fmt:black" ] }
"test" = { cmd = "pytest ./tests", env = { ENVFILE = ".env.test"} }
"quality" = { chain = [ "fmt", "test", "typecheck", "lint" ] }

[tool.black]
skip-numeric-underscore-normalization = true
line-length = 79
target-version = ['py310', 'py311']

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 79
split_on_trailing_comma = true


[tool.bandit]
exclude_dirs = ["tests"]
skips = ["C0114", "C0116"]


[tool.pylint.'MESSAGES CONTROL']
max-line-length = 79
min-similarity-lines = 7
extension-pkg-whitelist = "pydantic"
disable = """
    missing-module-docstring,
    missing-class-docstring,
    missing-function-docstring,
    too-few-public-methods,
    unsubscriptable-object,
    fixme,
    wildcard-import,
    unused-wildcard-import
"""

[tool.pyright]
include = ["src", "tests"]
exclude = [
  "**/node_modules",
  "**/__pycache__",
  "**/typings",
  "**/typestubs"
]
reportUnknownMemberType = false
reportPrivateImportUsage = false
typeCheckingMode = "basic"
stubPath = "typestubs"
pythonVersion = "3.10"

[tool.ruff]
exclude = ["typestubs"]
ignore = ["F401"]

