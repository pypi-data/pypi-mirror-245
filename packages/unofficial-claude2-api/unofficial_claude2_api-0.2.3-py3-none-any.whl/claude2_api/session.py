"""Session module"""
from dataclasses import dataclass
from selgym import (
    cleanup_resources,
    get_firefox_options,
    get_firefox_webdriver,
    get_default_firefox_profile,
)


@dataclass(frozen=True)
class SessionData:
    """
    This session class is made for `ClaudeAPIClient` constructor.

    It can be auto generated by having a working login in Firefox
    and geckodriver installed, calling `get_session_data()`
    with the Firefox profile path, or the default one if omitted.
    """

    cookie: str
    """
    The entire Cookie header string value
    """
    user_agent: str
    """
    Browser User agent
    """


def get_session_data(profile: str = "", quiet: bool = False) -> SessionData | None:
    """
    Retrieves Claude session data

    This function requires a profile with Claude login and geckodriver installed!

    The default Firefox profile will be used, if the profile argument was not overwrited.
    """

    base_url = "https://claude.ai/chats"
    if not profile:
        profile = get_default_firefox_profile()

    if not quiet:
        print(f"\nRetrieving {base_url} session cookie from {profile}")

    opts = get_firefox_options(firefox_profile=profile, headless=True)
    driver = get_firefox_webdriver(options=opts)
    try:
        driver.get(base_url)

        driver.implicitly_wait(10)
        user_agent = driver.execute_script("return navigator.userAgent")
        if not user_agent:
            raise RuntimeError("Cannot retrieve UserAgent...")

        cookies = driver.get_cookies()

        cookie_string = "; ".join(
            [f"{cookie['name']}={cookie['value']}" for cookie in cookies]
        )
        return SessionData(cookie_string, user_agent)
    finally:
        driver.quit()
        cleanup_resources()
