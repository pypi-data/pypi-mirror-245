# !!!!! DO NOT EVER CHANGE THIS FILE MANUALLY -- AUTOGENERATED by orm2pydantic.py !!!!!
# Generated from module egp_api_backend.server.internal.orm_models in the egp-api-backend package
# To regenerate this file, run:
# scaleapi/packages/egp-api-backend/scripts/orm2pydantic.sh

import datetime
from typing import Any, Optional, Dict

from pydantic import Field
from scale_egp.sdk.models.vendor_configuration import VendorConfiguration
from scale_egp.utils.model_utils import BaseModel, Entity, hiddenstr

try:
    from enum import StrEnum
except:
    from strenum import StrEnum


ModelState = StrEnum(
    "ModelState", [("ENABLED", "ENABLED"), ("PENDING", "PENDING"), ("DISABLED", "DISABLED")]
)
ModelEndpointType = StrEnum(
    "ModelEndpointType",
    [("SYNC", "SYNC"), ("ASYNC", "ASYNC"), ("STREAMING", "STREAMING"), ("BATCH", "BATCH")],
)
ModelType = StrEnum(
    "ModelType",
    [
        ("COMPLETION", "COMPLETION"),
        ("CHAT_COMPLETION", "CHAT_COMPLETION"),
        ("AGENT", "AGENT"),
        ("EMBEDDING", "EMBEDDING"),
        ("RERANKING", "RERANKING"),
    ],
)


class ModelTemplateRequest(BaseModel):
    name: str
    endpoint_type: ModelEndpointType
    model_type: ModelType
    vendor_configuration: VendorConfiguration
    weights_uri: str
    account_id: Optional[str] = Field(
        None, description="The ID of the account that owns the given entity."
    )


class ModelTemplate(Entity):
    name: str
    endpoint_type: ModelEndpointType
    model_type: ModelType
    vendor_configuration: VendorConfiguration
    weights_uri: str
    id: str = Field(..., description="The unique identifier of the entity.")
    created_at: datetime.datetime = Field(
        ..., description="The date and time when the entity was created in ISO format."
    )
    account_id: str = Field(..., description="The ID of the account that owns the given entity.")
    created_by_user_id: str = Field(..., description="The user who originally created the entity.")


class ModelEndpointRequest(BaseModel):
    endpoint_url: Optional[hiddenstr] = Field(None)
    name: str


class ModelEndpoint(Entity):
    name: str
    status: str
    id: str = Field(..., description="The unique identifier of the entity.")
    created_at: datetime.datetime = Field(
        ..., description="The date and time when the entity was created in ISO format."
    )
    created_by_user_id: str = Field(..., description="The user who originally created the entity.")


class ModelAliasRequest(BaseModel):
    name: str
    model_state: ModelState
    base_model_id: Optional[str] = Field(None)
    model_template_id: str
    user_parameter_values: Dict[str, Any]
    model_endpoint_id: Optional[str] = Field(None)
    account_id: Optional[str] = Field(
        None, description="The ID of the account that owns the given entity."
    )


class ModelAlias(Entity):
    """
    Entity for all models, including both self-hosted and 3rd party, base- and fine-tuned models.
    """

    name: str
    model_state: ModelState
    base_model_id: Optional[str] = Field(None)
    model_template_id: str
    user_parameter_values: Dict[str, Any]
    model_endpoint_id: Optional[str] = Field(None)
    id: str = Field(..., description="The unique identifier of the entity.")
    created_at: datetime.datetime = Field(
        ..., description="The date and time when the entity was created in ISO format."
    )
    account_id: str = Field(..., description="The ID of the account that owns the given entity.")
    created_by_user_id: str = Field(..., description="The user who originally created the entity.")


class ModelUsageRequest(BaseModel):
    model_id: str
    user_id: str
    started_at: datetime.datetime
    finished_at: Optional[datetime.datetime] = Field(None)


class ModelUsage(Entity):
    model_id: str
    user_id: str
    started_at: datetime.datetime
    finished_at: Optional[datetime.datetime] = Field(None)
    id: str = Field(..., description="The unique identifier of the entity.")
    created_at: datetime.datetime = Field(
        ..., description="The date and time when the entity was created in ISO format."
    )
