{"version":3,"sources":["CustomerJourney.tsx","index.tsx"],"names":["withStreamlitConnection","props","content","space_main_nodes","space_between_child_nodes","custom_font_awesome_url","height_user","max_width","first_child_extra_space","mainLabelOffset","custom_css","tooltipStyle","mainNodeHoverStyle","mainNodeClickedStyle","mainNodeDefaultStyle","childNodeHoverStyle","childNodeClickedStyle","childNodeDefaultStyle","mainNodeLineStyle","args","ref","useRef","svgHeight","setSvgHeight","useState","currentlyClickedNode","clickedNodeId","setClickedNodeId","useEffect","_ref$current$parentEl","current","maxChildCount","getMaxChildCount","mainNodeSpacing","childNodeOffset","margin","top","right","bottom","left","height","parentElement","offsetWidth","calculateHeight","d3","selectAll","remove","svgGroupTransform","concat","svg","attr","append","forEach","node","i","mainNodeX","mainNodeY","center","x","y","children","length","child","childIndex","_node$children$length","_node$children","childNodeSize","size","childPos","calculateChildPosition","expand_direction","lower","nextNode","startX","endX","applyClickedStyle","nodeElement","nodeId","showTooltip","event","d","data","tooltip","html","style","pageX","pageY","hideTooltip","handleMouseOver","id","transition","duration","handleMouseOut","dropShadowFilter","call","merge","mainNodeGroup","mainNodeCircle","color","node_style","datum","on","disabled","Streamlit","setComponentValue","return_value","icon","mainNodeIcon","icon_style","label","labelYOffset","tempText","label_style","text","labelWidth","getComputedTextLength","labelX","labelY","labelXOffset","label_position","_node$children$length2","_node$children2","childNodeGroup","childNodeCircle","setFrameHeight","nodes","Math","max","map","parentX","parentY","expandDirection","index","childSize","totalChildren","firstChildExtraSpace","directionMultiplier","yOffset","React","createElement","Fragment","Helmet","src","crossOrigin","overflowX","width","minWidth","position","visibility","padding","background","border","borderRadius","pointerEvents","zIndex","ReactDOM","render","StrictMode","CustomerJourneyComponent","document","getElementById"],"mappings":"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","file":"static/js/main.3358f16a.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { withStreamlitConnection, Streamlit } from 'streamlit-component-lib';\r\nimport { Helmet } from 'react-helmet';\r\nimport { BaseType,  } from 'd3';\r\n\r\n// Define a type for the node structure based on your provided attributes\r\ninterface Node {\r\n  id: number;\r\n  name: string;\r\n  label?: string;\r\n  color?: string;\r\n  return_value?: any;\r\n  disabled?: boolean;\r\n  icon?: string;\r\n  icon_style?: string;\r\n  expand_direction?: 'up' | 'down';\r\n  children?: Node[];\r\n  size?: number;\r\n  label_position?: 'bottom' | 'top' | 'left' | 'right';\r\n  label_style?: string;\r\n  node_style?: string;\r\n  center?: { x: number; y: number }; \r\n  tooltip?: string;\r\n\r\n}\r\n// Define a type for your component props\r\ninterface CustomerJourneyProps {\r\n  args: {\r\n    content: Node[];\r\n    space_main_nodes: number;\r\n    space_between_child_nodes: number;\r\n    custom_font_awesome_url: string;\r\n    height_user: number;\r\n    max_width: number | string;\r\n    first_child_extra_space: number;\r\n    mainLabelOffset?: number;\r\n    custom_css?: string;\r\n    tooltipStyle: React.CSSProperties;\r\n    mainNodeHoverStyle: React.CSSProperties;\r\n    mainNodeClickedStyle: React.CSSProperties;\r\n    mainNodeDefaultStyle: React.CSSProperties;\r\n    childNodeHoverStyle: React.CSSProperties;\r\n    childNodeClickedStyle: React.CSSProperties;\r\n    childNodeDefaultStyle: React.CSSProperties;\r\n    mainNodeLineStyle: React.CSSProperties;\r\n    ChildNodeLineStyle: React.CSSProperties;\r\n\r\n  };\r\n}\r\n\r\nconst CustomerJourneyComponent = (props: CustomerJourneyProps) => {\r\n  const { content, space_main_nodes, space_between_child_nodes, custom_font_awesome_url,height_user,max_width, first_child_extra_space,\r\n     mainLabelOffset, custom_css, tooltipStyle, mainNodeHoverStyle, mainNodeClickedStyle, mainNodeDefaultStyle, childNodeHoverStyle,\r\n     childNodeClickedStyle, childNodeDefaultStyle, mainNodeLineStyle} = props.args;\r\n\r\n  const ref = useRef<SVGSVGElement>(null);\r\n  const [svgHeight, setSvgHeight] = useState(500);\r\n  let currentlyClickedNode: d3.Selection<SVGCircleElement, Node, BaseType, unknown> | null = null;\r\n  const [clickedNodeId, setClickedNodeId] = useState<number | null>(null);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (!content || !ref.current) {\r\n      return;\r\n    }\r\n\r\n    const maxChildCount = getMaxChildCount(content);\r\n    const mainNodeSpacing = space_main_nodes;\r\n    const childNodeOffset = space_between_child_nodes;\r\n    const margin = { top: 25, right: 25, bottom: 50, left: 40 };\r\n\r\n    const width = ref.current.parentElement?.offsetWidth || 800;\r\n    const height = calculateHeight(content, childNodeOffset, maxChildCount, margin);\r\n\r\n    setSvgHeight(height + margin.top + margin.bottom);\r\n\r\n    d3.select(ref.current).selectAll(\"*\").remove();\r\n\r\n    // Remove the margin.top from the translation to reduce the white space above the content\r\n    const svgGroupTransform = `translate(${margin.left},0)`; // Changed from ${margin.top} to 0\r\n\r\n    const svg = d3.select(ref.current)\r\n      .attr(\"class\", \"svg-customer-journey\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", max_width)\r\n      .attr(\"height\", svgHeight) // You might need to adjust this height based on your content\r\n      .append(\"g\")\r\n      .attr(\"transform\", svgGroupTransform);\r\n\r\n    // Drawing lines between main nodes and their children\r\n    content.forEach((node, i) => {\r\n      const mainNodeX = i * mainNodeSpacing;\r\n      const mainNodeY = height / 2;\r\n      node.center = { x: mainNodeX, y: mainNodeY };\r\n\r\n      if (node.children && node.children.length > 0) {\r\n        node.children.forEach((child, childIndex) => {\r\n          const childNodeSize = child.size || 10;\r\n          const childPos = calculateChildPosition(mainNodeX, mainNodeY, node.expand_direction || 'up', childNodeOffset, childIndex, childNodeSize, node.children?.length ?? 0, first_child_extra_space );\r\n          child.center = childPos;\r\n\r\n          svg.append(\"line\")\r\n            .attr(\"class\", \"line_betweend_main_and_child_nodes\")\r\n            .attr(\"x1\", mainNodeX)\r\n            .attr(\"y1\", mainNodeY)\r\n            .attr(\"x2\", child.center.x)\r\n            .attr(\"y2\", child.center.y)\r\n            .attr(\"stroke\", \"black\")\r\n            .attr(\"stroke-width\", 2)\r\n            .lower();\r\n        });\r\n      }\r\n\r\n      // Draw lines between main nodes\r\n      if (i < content.length - 1) {\r\n        const nextNode = content[i + 1];\r\n        const startX = mainNodeX + (node.size || 10) / 2;\r\n        const endX = (i + 1) * mainNodeSpacing - (nextNode.size || 10) / 2;\r\n\r\n        svg.append(\"line\")\r\n          .attr(\"class\", \"line_between_main_nodes\")\r\n          .attr(\"x1\", startX)\r\n          .attr(\"y1\", mainNodeY)\r\n          .attr(\"x2\", endX)\r\n          .attr(\"y2\", mainNodeY)\r\n          .attr(\"stroke\", \"black\")\r\n          .attr(\"stroke-width\", 2)\r\n          .lower();\r\n      }\r\n    });\r\n\r\n     // Then append nodes\r\n  content.forEach((node, i) => {\r\n    \r\n    const mainNodeX = i * mainNodeSpacing;\r\n    const mainNodeY = height / 2;\r\n    // Store the center point for each node\r\n    node.center = { x: mainNodeX, y: mainNodeY };\r\n\r\n    function applyClickedStyle(nodeElement: d3.Selection<SVGCircleElement, Node, BaseType, unknown>, nodeId: number) {\r\n      setClickedNodeId(nodeId)\r\n      currentlyClickedNode = nodeElement;\r\n    }\r\n    \r\n\r\n    function showTooltip(event: MouseEvent, d: unknown, nodeElement: d3.Selection<SVGCircleElement, Node, BaseType, unknown>) {\r\n      const data = d as Node;\r\n      if (data.tooltip) {\r\n        const tooltipDiv = d3.select('#node-tooltip');\r\n        tooltipDiv\r\n          .html(data.tooltip) // assuming d.tooltip contains the HTML content for the tooltip\r\n          .style('visibility', 'visible')\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY + 10) + 'px');\r\n      }\r\n    }\r\n\r\n    function hideTooltip() {\r\n      const tooltipDiv = d3.select('#node-tooltip');\r\n      tooltipDiv.style('visibility', 'hidden');\r\n    }\r\n\r\n    const  duration_ms = 200;\r\n\r\n    function handleMouseOver(event: MouseEvent, d: unknown, nodeElement: d3.Selection<SVGCircleElement, Node, BaseType, unknown>) {\r\n      const data = d as Node;\r\n      if (data.id !== clickedNodeId) {\r\n      nodeElement\r\n        .transition()\r\n        .duration(duration_ms)\r\n        .attr(\"r\", (data.size || 10) * 1.1)\r\n        .style(\"stroke\", \"black\")\r\n        .style(\"stroke-width\", \"2px\");\r\n    }\r\n   \r\n    }\r\n    \r\n    function handleMouseOut(event: MouseEvent, d: unknown, nodeElement: d3.Selection<SVGCircleElement, Node, BaseType, unknown>) {\r\n      const data = d as Node;\r\n      // Only reset the style if this node is not the currently clicked node\r\n      if (data.id !== clickedNodeId) {\r\n        nodeElement\r\n          .transition()\r\n          .duration(duration_ms)\r\n          .attr(\"r\", data.size || 10)\r\n          .style(\"stroke\", null)\r\n          .style(\"stroke-width\", null);\r\n      }\r\n    }\r\n\r\n    const defs = svg.append(\"defs\");\r\n\r\n      // Create drop shadow filter\r\n  const dropShadowFilter = defs.append(\"filter\")\r\n  .attr(\"id\", \"drop-shadow\")\r\n  .attr(\"height\", \"130%\");\r\n\r\n  // Append Gaussian blur\r\n  dropShadowFilter.append(\"feGaussianBlur\")\r\n  .attr(\"in\", \"SourceAlpha\")\r\n  .attr(\"stdDeviation\", 3)\r\n  .attr(\"result\", \"blur\");\r\n\r\n  // Append offset\r\n  dropShadowFilter.append(\"feOffset\")\r\n  .attr(\"in\", \"blur\")\r\n  .attr(\"dx\", 2)\r\n  .attr(\"dy\", 2)\r\n  .attr(\"result\", \"offsetBlur\");\r\n\r\n  // Merge effects\r\n  dropShadowFilter.append(\"feMerge\")\r\n  .call(merge => {\r\n    merge.append(\"feMergeNode\").attr(\"in\", \"offsetBlur\");\r\n    merge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\");\r\n  });\r\n\r\n\r\n  const mainNodeGroup = svg.append(\"g\")\r\n    .attr(\"class\", \"main-node-group\")\r\n    .attr(\"id\", `main-node-group-${node.id}`)\r\n    .attr(\"transform\", `translate(${mainNodeX},${mainNodeY})`);\r\n\r\n  // Append main node circle\r\n  const mainNodeCircle = mainNodeGroup.append(\"circle\")\r\n  .attr(\"id\", `main-node-${node.id}`)\r\n  .attr(\"class\", \"main-node\")\r\n  .attr(\"r\", node.size ? (node.id === clickedNodeId ? node.size * 1.05 : node.size) : 10)\r\n  .attr(\"fill\",  (node.color || 'gray'))\r\n  .attr(\"style\", node.id === clickedNodeId ? 'stroke: black; stroke-width: 2px;' : (node.node_style || ''))\r\n  .attr(\"filter\", node.id === clickedNodeId ? 'url(#drop-shadow)' : null)\r\n  .datum(node);\r\n\r\n  // Add click event handler\r\n  mainNodeCircle.on('click', () => {\r\n    if (!node.disabled) {\r\n      setClickedNodeId(node.id);\r\n      Streamlit.setComponentValue({node: node, return_value: node.return_value, id: node.id});\r\n    }\r\n  });\r\n\r\n\r\n\r\n  // Add hover effects and cursor style\r\n  if (!node.disabled) {\r\n    mainNodeCircle.style(\"cursor\", \"pointer\");\r\n\r\n    mainNodeCircle.on('mouseover', function(event: MouseEvent, d: unknown) {\r\n\r\n      handleMouseOver(event, d, mainNodeCircle);\r\n      showTooltip(event, d, mainNodeCircle)\r\n\r\n      // const styles = mainNodeHoverStyle;\r\n      // if (styles)\r\n      //   for (const [key, value] of Object.entries(styles)) {\r\n      //     d3.select(this).style(key, value);\r\n      //   }\r\n    });\r\n    \r\n    mainNodeCircle.on('mouseout', function(event: MouseEvent, d: unknown) {\r\n      handleMouseOut(event, d, mainNodeCircle);\r\n      hideTooltip();\r\n\r\n    });\r\n  }\r\n\r\n      // Main node FontAwesome icon\r\n    if (node.icon) {\r\n\r\n      const  mainNodeIcon = mainNodeGroup.append(\"foreignObject\")\r\n        .attr(\"id\", `main-node-icon-${node.id}`)\r\n        .attr(\"width\", node.size || 10)\r\n        .attr(\"height\", node.size || 10)\r\n        .attr(\"x\", -(node.size || 10) / 2)\r\n        .attr(\"y\", -(node.size || 10) / 2)\r\n        .append(\"xhtml:div\")\r\n        .attr(\"class\", \"icon-container main-node-icon\")\r\n        .style(\"display\", \"flex\")\r\n        .style(\"align-items\", \"center\")\r\n        .style(\"justify-content\", \"center\")\r\n        .style(\"height\", `${node.size || 10 * 2}px`) // Set the height of the container\r\n        .style(\"line-height\", `${node.size || 10 * 2}px`) // Set the line-height to match the height for vertical centering    \r\n        .html(`<i class=\"${node.icon}\" style=\"${node.icon_style}\"></i>`)\r\n        .datum(node);\r\n\r\n        //Wir müssen das On click event auch dem Icon hinzufügen ansonsten werden Klicke auf das Icon nicht erkannt\r\n        if (!node.disabled) {\r\n          mainNodeIcon.style(\"cursor\", \"pointer\");\r\n          mainNodeIcon.on('click', () => {\r\n            // Return the node data to Streamlit\r\n            applyClickedStyle(mainNodeCircle, node.id); // Apply the clicked style to the main node circle\r\n            Streamlit.setComponentValue({node: node, return_value: node.return_value, id: node.id});\r\n          });\r\n\r\n          mainNodeIcon.on('mouseover', function(event: MouseEvent, d: unknown) {\r\n            showTooltip(event, d, mainNodeCircle)\r\n            handleMouseOver(event, d, mainNodeCircle);\r\n\r\n            // const styles = mainNodeHoverStyle;\r\n            // if (styles)\r\n            //   for (const [key, value] of Object.entries(styles)) {\r\n            //     d3.select(this).style(key, value);\r\n            //   }\r\n          });\r\n          // });\r\n\r\n          mainNodeIcon.on('mouseout', function(event: MouseEvent, d: unknown) {\r\n            hideTooltip();\r\n            handleMouseOut(event, d, mainNodeCircle);\r\n          });\r\n\r\n\r\n        }\r\n    }\r\n\r\n    // Label main Node Group\r\n    if (node.label) {\r\n        const labelYOffset = mainLabelOffset || 40;\r\n\r\n        const tempText = svg.append(\"text\")\r\n        .attr(\"class\", \"main-node-label\")\r\n        .attr(\"id\", `main-node-label-${node.id}`) // Add an id to the text element so we can select it later for calculating the width\r\n        .attr('visibility', 'hidden') // Hide the temporary text element\r\n        .attr(\"style\", node.label_style || '')\r\n        .text(node.label);\r\n\r\n      // Get the width of the text from the temporary text element\r\n      const labelWidth = tempText.node()!.getComputedTextLength();\r\n  \r\n      // Remove the temporary text element from the DOM\r\n      tempText.remove();\r\n  \r\n        let labelX = 0;\r\n        let labelY = 0;\r\n\r\n        const labelXOffset = labelWidth / 2;\r\n  \r\n        switch (node.label_position) {\r\n          case 'top':\r\n            labelX = -labelXOffset;\r\n            labelY = -labelYOffset;\r\n            break;\r\n          case 'bottom':\r\n            labelY = labelYOffset;\r\n            labelX = -labelXOffset;\r\n            break;\r\n          case 'left':\r\n            labelX = -labelXOffset;\r\n            break;\r\n          case 'right':\r\n            labelX = labelXOffset;\r\n            break;\r\n          default:\r\n            labelX = 0;\r\n            labelY = labelYOffset;\r\n            break;\r\n        }\r\n  \r\n        mainNodeGroup.append(\"text\")\r\n          .attr(\"class\", \"main-node-label\")\r\n          .attr(\"id\", `main-node-label-${node.id}`)\r\n          .attr(\"x\", labelX)\r\n          .attr(\"y\", labelY)\r\n          .attr(\"style\", node.label_style || '')\r\n          .html(node.label);\r\n      }\r\n    \r\n    // Append children nodes\r\n    if (node.children && node.children.length > 0) {\r\n      node.children.forEach((child, childIndex) => {\r\n        // Calculate position for child node\r\n        const childPos = calculateChildPosition(mainNodeX, mainNodeY, node.expand_direction || 'up', childNodeOffset, childIndex, child.size || 10, node.children?.length ?? 0, first_child_extra_space);\r\n        child.center = childPos;\r\n\r\n        const childNodeGroup = svg.append(\"g\")\r\n        .attr(\"id\", `child-node-group-${child.id}`)\r\n        .attr(\"class\", \"child-node-group\")\r\n        .attr(\"transform\", `translate(${childPos.x},${childPos.y})`);\r\n\r\n  \r\n\r\n        // Append child node circle\r\n        const childNodeCircle = childNodeGroup.append(\"circle\")\r\n        .attr(\"id\", `child-node-${child.id}`)\r\n        .attr(\"class\", \"child-node\")\r\n        .attr(\"r\", child.size ? (child.id === clickedNodeId ? child.size * 1.1 : child.size) : 5)\r\n          .attr(\"fill\", child.color || 'gray')\r\n          .attr(\"style\", child.id === clickedNodeId ? 'stroke: black; stroke-width: 2px;' : (child.node_style || ''))\r\n          // .attr(\"filter\", child.id === clickedNodeId ? 'url(#drop-shadow)' : null)\r\n          .datum(child);\r\n\r\n\r\n    \r\n          childNodeCircle.on('click', () => {\r\n            // Check if node is not disabled\r\n            if (!child.disabled) {\r\n              // Return the node data to Streamlit\r\n              applyClickedStyle(childNodeCircle, child.id); // Apply the clicked style to the child node circle\r\n              Streamlit.setComponentValue({node: node, return_value: child.return_value, id: child.id});\r\n            }\r\n          });\r\n\r\n        // Change cursor if the node is not disabled\r\n        if (!child.disabled) {\r\n            childNodeCircle.style(\"cursor\", \"pointer\");\r\n              // Attach mouseover and mouseout events to child nodes for tooltip\r\n      childNodeCircle.on('mouseover', function(event, d) {\r\n        showTooltip(event, d, childNodeCircle);\r\n        handleMouseOver(event, d, childNodeCircle);\r\n      });\r\n      childNodeCircle.on('mouseout', function(event, d) {\r\n        hideTooltip();\r\n        handleMouseOut(event, d, childNodeCircle);\r\n      });\r\n    }\r\n    else {\r\n      childNodeCircle.on('mouseover', function(event, d) {\r\n        showTooltip(event, d, childNodeCircle);\r\n      });\r\n      childNodeCircle.on('mouseout', function(event, d) {\r\n        hideTooltip();\r\n      }\r\n      );\r\n    }\r\n\r\n        // Child node FontAwesome icon\r\n        \r\n      // Child node FontAwesome icon\r\n    if (child.icon) {\r\n\r\n      childNodeGroup.append(\"foreignObject\")\r\n        .attr(\"id\", `child-node-icon-${child.id}`)\r\n        .attr(\"width\", child.size || 5)\r\n        .attr(\"height\", child.size || 5)\r\n        .attr(\"x\", -(child.size || 5) / 2)\r\n        .attr(\"y\", -(child.size || 5) / 2)\r\n        .append(\"xhtml:div\")\r\n        .attr(\"class\", \"icon-container child-node-icon-container\")\r\n        .style(\"display\", \"flex\")\r\n        .style(\"align-items\", \"center\")\r\n        .style(\"justify-content\", \"center\")\r\n        .style(\"height\", `${child.size || 5 * 2}px`) // Set the height of the container\r\n        .style(\"line-height\", `${child.size || 5 * 2}px`) // Set the line-height to match the height for vertical centering    \r\n        .html(`<i class=\"${child.icon}\" style=\"${child.icon_style}\"></i>`)\r\n        .datum(child);\r\n\r\n        //Wir müssen das On click event auch dem Icon hinzufügen ansonsten werden Klicke auf das Icon nicht erkannt\r\n        if (!child.disabled) {\r\n          childNodeCircle.style(\"cursor\", \"pointer\");\r\n          childNodeCircle.on('click', () => {\r\n            // Return the node data to Streamlit\r\n            applyClickedStyle(childNodeCircle, child.id); // Apply the clicked style to the child node circle\r\n            Streamlit.setComponentValue({node: node, return_value: child.return_value, id: child.id});\r\n          });\r\n\r\n          childNodeCircle.on('mouseover', function(event: MouseEvent, d: unknown) {\r\n            // console.log(\"hover\")\r\n            // showTooltip(event, d, childNodeCircle)\r\n            handleMouseOver(event, d, childNodeCircle);\r\n          });\r\n\r\n          childNodeCircle.on('mouseout', function(event: MouseEvent, d: unknown) {\r\n            handleMouseOut(event, d, childNodeCircle);\r\n            // hideTooltip();\r\n          });\r\n\r\n    }\r\n  }\r\n        \r\n        // Label child Node Group\r\n        if (child.label) {\r\n          childNodeGroup.append(\"text\")\r\n            .attr(\"class\", \"child-node-label\")\r\n            .attr(\"id\", `child-node-label-${child.id}`)\r\n            .attr(\"x\", child.label_position === 'right' ? 15 : -100)\r\n            .attr(\"y\", 5)\r\n            .attr(\"style\", child.label_style || '')\r\n            .html(child.label);\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  \r\n\r\n      // Update the setFrameHeight call to the new svgHeight that you calculate based on the content\r\n  Streamlit.setFrameHeight(height_user);\r\n\r\n  }, [content, space_main_nodes, space_between_child_nodes]);\r\n\r\n// // If you decide to use a fixed height\r\n// const fixedHeight = 400; // Replace with the height that fits your content\r\n\r\n// useEffect(() => {\r\n//   setSvgHeight(fixedHeight); // Set the fixed height when the component mounts\r\n//   Streamlit.setFrameHeight(fixedHeight); // Update the Streamlit frame height\r\n// }, []);\r\n\r\n\r\n  const calculateHeight = (nodes: Node[], childNodeOffset: number, maxChildCount: number, margin: {top: number; right: number; bottom: number; left: number}): number => {\r\n    // Calculate the total height required for the svg based on the nodes and their children\r\n    // This is a placeholder calculation and you might need to adjust the logic to fit your content\r\n    let height = 200; // nodeSize should be the size of your nodes, margin.betweenNodes is a made-up value for spacing between nodes\r\n    const additionalSpaceForChildren = maxChildCount * childNodeOffset;\r\n    return height + additionalSpaceForChildren;\r\n  };\r\n\r\n\r\n  // Calculate maximum child count among all nodes\r\n  const getMaxChildCount = (nodes: Node[]): number => {\r\n    return Math.max(...nodes.map(node => node.children ? node.children.length : 0));\r\n  };\r\n\r\n  const calculateChildPosition = (parentX: number, parentY: number, expandDirection: 'up' | 'down', childNodeOffset: number, index: number, childSize: number, totalChildren: number, firstChildExtraSpace: number) => {\r\n    // Calculate the base offset direction (positive for 'down', negative for 'up')\r\n    const directionMultiplier = expandDirection === 'up' ? -1 : 1;\r\n  \r\n    // Start with the base offset for child nodes\r\n    var yOffset = directionMultiplier * childNodeOffset * index;\r\n  \r\n    // Increase the yOffset by the size of the node to avoid overlapping\r\n    yOffset += directionMultiplier * childSize / 2;\r\n  \r\n    // If it's the first child, add the extra space to the yOffset\r\n    if (index === 0) {\r\n      yOffset += directionMultiplier * firstChildExtraSpace;\r\n    } else {\r\n      // For subsequent children, ensure they are spaced out by including the first child's extra space in their offset\r\n      yOffset += directionMultiplier * firstChildExtraSpace// / (totalChildren - 1);\r\n    }\r\n  \r\n    return {\r\n      x: parentX,\r\n      y: parentY + yOffset\r\n    };\r\n  };\r\n\r\n\r\nreturn (\r\n  <>\r\n   {/* Add css string from user input */}\r\n    <style>\r\n      {custom_css}\r\n    </style>\r\n    <Helmet>\r\n      <script\r\n        src={custom_font_awesome_url}\r\n        crossOrigin=\"anonymous\"\r\n        id=\"font-awesome-icons\"\r\n      />\r\n    </Helmet>\r\n    <div style={{ overflowX: 'auto', width: '100%'}}>\r\n      {/* Ensure that the SVG has a minWidth that allows for scrolling */}\r\n      {/* The minWidth must be set to a value that will accommodate all content */}\r\n      {/* For example, if the furthest element is at 2000px, you would set the minWidth accordingly */}\r\n      <svg ref={ref} style={{ height: `${svgHeight}px`, minWidth: max_width }} />\r\n    </div>\r\n\r\n    {/* Tooltip div */}\r\n    <div id=\"node-tooltip\" style={{\r\n    ...{ // Default tooltip styles\r\n      position: 'absolute',\r\n      visibility: 'hidden',\r\n      padding: '10px',\r\n      background: 'rgba(255, 255, 255, 0.9)',\r\n      border: '1.5px solid #ddd',\r\n      borderRadius: '4px',\r\n      pointerEvents: 'none',\r\n      zIndex: 10,\r\n    },\r\n    ...tooltipStyle // Apply custom styles\r\n  }}></div>\r\n  </>\r\n);\r\n\r\n\r\n};\r\n\r\nexport default withStreamlitConnection(CustomerJourneyComponent);","\r\nimport React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport CustomerJourneyComponent from \"./CustomerJourney\"\r\n\r\n// Lots of import to define a Styletron engine and load the light theme of baseui\r\n\r\n\r\n// Wrap your CustomSlider with the baseui them\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CustomerJourneyComponent />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)"],"sourceRoot":""}