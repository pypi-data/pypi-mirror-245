name: Deploy

on:
  push:
    tags:
      - 'v*'

env:
  PROJECT_NAME: itaxotools-calculate-distances
  ARTIFACT_DISTRIBUTIONS: itaxotools-calculate-distances-distributions


jobs:
  linux:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: PyO3/maturin-action@v1
      with:
        manylinux: auto
        command: build
        args: --release --sdist -o dist --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ARTIFACT_DISTRIBUTIONS }}
        path: dist/*

  windows:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v3
    - uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release -o dist --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ARTIFACT_DISTRIBUTIONS }}
        path: dist/*.whl

  macos:
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v3
    - uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release -o dist --target universal2-apple-darwin --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ARTIFACT_DISTRIBUTIONS }}
        path: dist/*.whl


  publish-to-testpypi:
    name: Publish to TestPyPI
    runs-on: ubuntu-latest
    needs:
      - linux
      - windows
      - macos

    environment:
        name: testpypi
        url: https://test.pypi.org/p/${{ env.PROJECT_NAME }}

    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_DISTRIBUTIONS }}
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true


  publish-to-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs:
      - publish-to-testpypi

    environment:
      name: pypi
      url: https://pypi.org/p/${{ env.PROJECT_NAME }}

    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_DISTRIBUTIONS }}
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true


  draft-github-release:
    name: Draft a GitHub Release
    runs-on: ubuntu-latest
    needs:
      - publish-to-testpypi

    environment:
      name: github
      url: ${{ github.server_url }}/${{ github.repository }}/releases

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_DISTRIBUTIONS }}
          path: dist/

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --generate-notes
          --draft

      - name: Upload artifacts to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
