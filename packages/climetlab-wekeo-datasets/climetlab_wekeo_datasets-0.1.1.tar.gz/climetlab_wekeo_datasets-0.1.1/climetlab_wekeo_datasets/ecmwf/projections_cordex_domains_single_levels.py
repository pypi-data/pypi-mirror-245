#!/usr/bin/env python3
# (C) Copyright 2023 European Centre for Medium-Range Weather Forecasts.
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
# In applying this licence, ECMWF does not waive the privileges and immunities
# granted to it by virtue of its status as an intergovernmental organisation
# nor does it submit to any jurisdiction.
from __future__ import annotations

from climetlab.decorators import normalize

from climetlab_wekeo_datasets.ecmwf.main import Main


class projections_cordex_domains_single_levels(Main):
    name = "EO:ECMWF:DAT:PROJECTIONS_CORDEX_DOMAINS_SINGLE_LEVELS"
    dataset = "EO:ECMWF:DAT:PROJECTIONS_CORDEX_DOMAINS_SINGLE_LEVELS"

    choices = [
        "domain",
        "experiment",
        "horizontal_resolution",
        "temporal_resolution",
        "gcm_model",
        "rcm_model",
        "ensemble_member",
        "format_",
    ]

    string_selects = [
        "end_year",
        "start_year",
        "variable",
    ]

    @normalize(
        "end_year",
        [
            "1949",
            "1950",
            "1951",
            "1952",
            "1953",
            "1954",
            "1955",
            "1956",
            "1957",
            "1958",
            "1959",
            "1960",
            "1961",
            "1962",
            "1963",
            "1964",
            "1965",
            "1966",
            "1967",
            "1968",
            "1969",
            "1970",
            "1971",
            "1972",
            "1973",
            "1974",
            "1975",
            "1976",
            "1977",
            "1978",
            "1979",
            "1980",
            "1981",
            "1982",
            "1983",
            "1984",
            "1985",
            "1986",
            "1987",
            "1988",
            "1989",
            "1990",
            "1991",
            "1992",
            "1993",
            "1994",
            "1995",
            "1996",
            "1997",
            "1998",
            "1999",
            "2000",
            "2001",
            "2002",
            "2003",
            "2004",
            "2005",
            "2006",
            "2007",
            "2008",
            "2009",
            "2010",
            "2011",
            "2012",
            "2013",
            "2014",
            "2015",
            "2016",
            "2017",
            "2018",
            "2019",
            "2020",
            "2021",
            "2022",
            "2023",
            "2024",
            "2025",
            "2026",
            "2027",
            "2028",
            "2029",
            "2030",
            "2031",
            "2032",
            "2033",
            "2034",
            "2035",
            "2036",
            "2037",
            "2038",
            "2039",
            "2040",
            "2041",
            "2042",
            "2043",
            "2044",
            "2045",
            "2046",
            "2047",
            "2048",
            "2049",
            "2050",
            "2051",
            "2052",
            "2053",
            "2054",
            "2055",
            "2056",
            "2057",
            "2058",
            "2059",
            "2060",
            "2061",
            "2062",
            "2063",
            "2064",
            "2065",
            "2066",
            "2067",
            "2068",
            "2069",
            "2070",
            "2071",
            "2072",
            "2073",
            "2074",
            "2075",
            "2076",
            "2077",
            "2078",
            "2079",
            "2080",
            "2081",
            "2082",
            "2083",
            "2084",
            "2085",
            "2086",
            "2087",
            "2088",
            "2089",
            "2090",
            "2091",
            "2092",
            "2093",
            "2094",
            "2095",
            "2096",
            "2097",
            "2098",
            "2099",
            "2100",
            "2101",
        ],
        multiple=True,
    )
    @normalize(
        "start_year",
        [
            "1948",
            "1949",
            "1950",
            "1951",
            "1952",
            "1953",
            "1954",
            "1955",
            "1956",
            "1957",
            "1958",
            "1959",
            "1960",
            "1961",
            "1962",
            "1963",
            "1964",
            "1965",
            "1966",
            "1967",
            "1968",
            "1969",
            "1970",
            "1971",
            "1972",
            "1973",
            "1974",
            "1975",
            "1976",
            "1977",
            "1978",
            "1979",
            "1980",
            "1981",
            "1982",
            "1983",
            "1984",
            "1985",
            "1986",
            "1987",
            "1988",
            "1989",
            "1990",
            "1991",
            "1992",
            "1993",
            "1994",
            "1995",
            "1996",
            "1997",
            "1998",
            "1999",
            "2000",
            "2001",
            "2002",
            "2003",
            "2004",
            "2005",
            "2006",
            "2007",
            "2008",
            "2009",
            "2010",
            "2011",
            "2012",
            "2013",
            "2014",
            "2015",
            "2016",
            "2017",
            "2018",
            "2019",
            "2020",
            "2021",
            "2022",
            "2023",
            "2024",
            "2025",
            "2026",
            "2027",
            "2028",
            "2029",
            "2030",
            "2031",
            "2032",
            "2033",
            "2034",
            "2035",
            "2036",
            "2037",
            "2038",
            "2039",
            "2040",
            "2041",
            "2042",
            "2043",
            "2044",
            "2045",
            "2046",
            "2047",
            "2048",
            "2049",
            "2050",
            "2051",
            "2052",
            "2053",
            "2054",
            "2055",
            "2056",
            "2057",
            "2058",
            "2059",
            "2060",
            "2061",
            "2062",
            "2063",
            "2064",
            "2065",
            "2066",
            "2067",
            "2068",
            "2069",
            "2070",
            "2071",
            "2072",
            "2073",
            "2074",
            "2075",
            "2076",
            "2077",
            "2078",
            "2079",
            "2080",
            "2081",
            "2082",
            "2083",
            "2084",
            "2085",
            "2086",
            "2087",
            "2088",
            "2089",
            "2090",
            "2091",
            "2092",
            "2093",
            "2094",
            "2095",
            "2096",
            "2097",
            "2098",
            "2099",
            "2100",
        ],
        multiple=True,
    )
    @normalize(
        "variable",
        [
            "10m_u_component_of_the_wind",
            "10m_v_component_of_the_wind",
            "10m_wind_speed",
            "200hpa_temperature",
            "200hpa_u_component_of_the_wind",
            "200hpa_v_component_of_the_wind",
            "2m_air_temperature",
            "2m_relative_humidity",
            "2m_surface_specific_humidity",
            "500hpa_geopotential_height",
            "850hpa_u_component_of_the_wind",
            "850hpa_v_component_of_the_wind",
            "evaporation",
            "land_area_fraction",
            "maximum_2m_temperature_in_the_last_24_hours",
            "mean_precipitation_flux",
            "mean_sea_level_pressure",
            "minimum_2m_temperature_in_the_last_24_hours",
            "orography",
            "surface_pressure",
            "surface_solar_radiation_downwards",
            "surface_thermal_radiation_downward",
            "surface_upwelling_shortwave_radiation",
            "total_cloud_cover",
            "total_run_off_flux",
        ],
        multiple=True,
    )
    @normalize(
        "domain",
        [
            "africa",
            "antarctic",
            "arctic",
            "australasia",
            "central_america",
            "central_asia",
            "east_asia",
            "europe",
            "mediterranean",
            "middle_east_and_north_africa",
            "north_america",
            "south_america",
            "south_asia",
            "south_east_asia",
        ],
    )
    @normalize(
        "experiment",
        [
            "evaluation",
            "historical",
            "rcp_2_6",
            "rcp_4_5",
            "rcp_8_5",
        ],
    )
    @normalize(
        "horizontal_resolution",
        [
            "0_11_degree_x_0_11_degree",
            "0_20_degree_x_0_20_degree",
            "0_22_degree_x_0_22_degree",
            "0_44_degree_x_0_44_degree",
            "interpolated_0_44_degree_x_0_44_degree",
        ],
    )
    @normalize(
        "temporal_resolution",
        [
            "3_hours",
            "6_hours",
            "daily_mean",
            "fixed",
            "monthly_mean",
            "seasonal_mean",
        ],
    )
    @normalize(
        "gcm_model",
        [
            "cccma_canesm2",
            "cnrm_cerfacs_cm5",
            "csiro_bom_access1_0",
            "csiro_bom_access1_3",
            "csiro_qccce_csiro_mk3_6_0",
            "era_interim",
            "ichec_ec_earth",
            "ipsl_cm5a_lr",
            "ipsl_cm5a_mr",
            "miroc_miroc5",
            "mohc_hadgem2_es",
            "mpi_m_mpi_esm_lr",
            "mpi_m_mpi_esm_mr",
            "ncar_ccsm4",
            "ncc_noresm1_m",
            "noaa_gfdl_esm2m",
            "noaa_gfdl_gfdl_esm2g",
        ],
    )
    @normalize(
        "rcm_model",
        [
            "awi_hirham5",
            "bccr_wrf331",
            "boun_regcm4_3",
            "cccma_canrcm4",
            "clmcom_btu_cclm4_8_17",
            "clmcom_cclm4_8_17_clm3_5",
            "clmcom_cclm5_0_2",
            "clmcom_clm_cclm4_8_17",
            "clmcom_eth_cosmo_crclim",
            "clmcom_hzg_cclm5_0_15",
            "clmcom_kit_cclm5_0_15",
            "cmcc_cclm4_8_19",
            "cnrm_aladin52",
            "cnrm_aladin53",
            "cnrm_aladin63",
            "csiro_ccam_2008",
            "cyi_wrf351",
            "dmi_hirham5",
            "elu_regcm4_3",
            "gerics_remo2009",
            "gerics_remo2015",
            "guf_cclm4_8_18_germany",
            "ictp_regcm4_3",
            "ictp_regcm4_4",
            "ictp_regcm4_6",
            "ictp_regcm4_7",
            "iitm_regcm4_4",
            "inpe_eta",
            "ipsl_wrf381p",
            "isu_regcm4",
            "knmi_racmo21p",
            "knmi_racmo22e",
            "knmi_racmo22t",
            "lmd_lmdz4nemomed8",
            "mgo_rrcm",
            "mohc_hadrem3_ga7_05",
            "mohc_hadrm3p",
            "mpi_csc_remo2009",
            "ncar_regcm4",
            "ncar_wrf",
            "ornl_regcm4_7",
            "ouranos_crcm5",
            "rmib_ugent_alaro_0",
            "ru_core_regcm4_3",
            "smhi_rca4",
            "smhi_rca4_sn",
            "ua_wrf",
            "ucan_wrf341i",
            "uhoh_wrf361h",
            "ulg_mar311",
            "ulg_mar36",
            "unsw_wrf360j",
            "unsw_wrf360k",
            "unsw_wrf360l",
            "uqam_crcm5",
            "uqam_crcm5_sn",
        ],
    )
    @normalize(
        "ensemble_member",
        [
            "r0i0p0",
            "r12i1p1",
            "r1i1p1",
            "r2i1p1",
            "r3i1p1",
            "r6i1p1",
        ],
    )
    @normalize(
        "format_",
        [
            "tgz",
            "zip",
        ],
    )
    def __init__(
        self,
        end_year,
        start_year,
        variable,
        domain=None,
        experiment=None,
        horizontal_resolution=None,
        temporal_resolution=None,
        gcm_model=None,
        rcm_model=None,
        ensemble_member=None,
        format_=None,
    ):
        super().__init__(
            end_year=end_year,
            start_year=start_year,
            variable=variable,
            domain=domain,
            experiment=experiment,
            horizontal_resolution=horizontal_resolution,
            temporal_resolution=temporal_resolution,
            gcm_model=gcm_model,
            rcm_model=rcm_model,
            ensemble_member=ensemble_member,
            format_=format_,
        )
