[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "pineko"
version = "0.4.5"
description = "Combine PineAPPL grids and EKOs into FK tables"
readme = "README.md"
authors = [
  "Alessandro Candido <alessandro.candido@mi.infn.it>",
  "Andrea Barontini <andrea.barontini@mi.infn.it>",
  "Felix Hekhorn <felix.hekhorn@mi.infn.it>",
]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Physics",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
]
repository = "https://github.com/N3PDF/pineko"
packages = [{ include = "pineko", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
eko = "^0.14.0"
pineappl = "^0.6.2"
PyYAML = "^6.0"
numpy = "^1.21.0"
pandas = "^1.4.1"
rich = "^12.5.1"
click = "^8.0.4"
tomli = "^2.0.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = "^4.3.2"
sphinx-rtd-theme = "^1.0.0"
sphinxcontrib-bibtex = "^2.4.1"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.1.3"
pytest-cov = "^4.0.0"
pytest-env = "^0.6.2"
pylint = "^2.11.1"

[tool.poetry.group.dev.dependencies]
pdbpp = "^0.10.3"
ipython = "^8.0"

[tool.poetry.extras]
docs = ["sphinx", "sphinx-rtd-theme", "sphinxcontrib-bibtex"]

[tool.poetry.scripts]
pineko = "pineko:command"

[tool.poe.tasks]
test = "pytest tests"
bench.cmd = "pytest benchmarks"
bench.env.NUMBA_DISABLE_JIT.default = "1"
lint = "pylint src/ -E"
lint-warnings = "pylint src/ --exit-zero"
pineko = "pineko"
docs = { "shell" = "cd docs; make html" }
docs-view = { "shell" = "cd docs; make view" }
docs-server = { "shell" = "cd docs; make server" }
docs-clean = { "shell" = "cd docs; make clean" }
docs-cleanall = { "shell" = "cd docs; make cleanall" }

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
style = "semver"
dirty = true

[tool.poetry-dynamic-versioning.substitution]
files = ["src/pineko/version.py"]

[tool.pytest.ini_options]
testpaths = ['tests/', 'benchmarks/']
python_files = ['test_*.py', 'bench_*.py']
python_functions = ['test_*', 'benchmark_*']
addopts = [
  '--cov=pineko',
  '--cov-report=html',
  '--cov-report=xml',
  '--strict-markers',
]
env = ["D:NUMBA_DISABLE_JIT=1"]

[tool.pylint.master]
# extensions not to check
extension-pkg-whitelist = ["numpy", "numba", "lhapdf", "pineappl"]
ignore-paths = ["benchmarks/", "docs/", "tests/", "data/"]
# jobs has to be 1 as pylint is NOT threadsafe
jobs = 1
[tool.pylint.messages_control]
disable = ["invalid-name", "fixme"]
[tool.pylint.reports]
# Available formats are:
# text, parseable, colorized, json and msvs (visual studio).
output-format = "colorized"
[tool.pylint.format]
# Maximum number of characters on a single line.
max-line-length = 100
[tool.pylint.design]
# Maximum number of arguments for function / method
max-args = 10

[tool.pydocstyle]
convention = "numpy"
