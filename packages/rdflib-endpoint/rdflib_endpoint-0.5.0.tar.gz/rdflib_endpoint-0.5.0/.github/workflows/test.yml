name: Tests
on: [push, pull_request, workflow_call, workflow_dispatch]

jobs:

  CodeQL-Analysis:
    name: CodeQL analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write # required for all workflows
      # only required for workflows in private repositories:
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python

      # Autobuild attempts to build any compiled languages (C/C++, C#, Go, or Java).
      # If this step fails, then you should remove it and run the build manually
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2


  tests:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 📥️ Install dependencies
      run: |
        pipx install hatch

    - name: ☑️ Test with coverage
      run: |
        hatch run test --cov-report xml

    - name: ☂️ Upload coverage to Coveralls
      uses: coverallsapp/github-action@v2

    - name: ☂️ Upload coverage to Codecov
      uses: codecov/codecov-action@v3

    - name: ☁️ Analyze with SonarCloud
      if: github.event_name != 'pull_request'
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.organization=vemonet
          -Dsonar.projectKey=vemonet_rdflib-endpoint
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.sources=src/rdflib_endpoint
          -Dsonar.tests=tests/
          -Dsonar.verbose=true
