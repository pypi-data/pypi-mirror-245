# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/10_attr.ipynb.

# %% auto 0
__all__ = ['getindex', 'getshape', 'getcolumns', 'getdf', 'getkernel', 'getkdegree', 'getaffinity', 'getdiffop', 'getdata',
           'getgraph', 'getclusters', 'getembedding', 'getcentroids', 'getdiffpot']

# %% ../nbs/10_attr.ipynb 4
from typing import TypeGuard
from typing import Callable

# %% ../nbs/10_attr.ipynb 5
from itry import PHATE
from nlit import (
    KERNEL, KERNEL_DEGREE, AFFINITY, DIFF_OP,  GRAPH, CLUSTERS, EMBEDDING,
    CENTROIDS, DIFF_POTENTIAL, CENTROIDS, DIFF_OP, AFFINITY, CLUSTERS, GRAPH,
    DATA, SHAPE, INDEX, COLUMNS
)

from chck import isdf, istup
from hasr import make as hmake

# %% ../nbs/10_attr.ipynb 6
from .cons import empty
from .atyp import DataType, GraphType, Shaped
from .grds import isdata, isgraph, isshaped
from .core import make

# %% ../nbs/10_attr.ipynb 8
@make(INDEX)
def getindex(x, default = None) -> DataType | None: ...

@make(SHAPE, check=istup, otype=isshaped, default=tuple())
def getshape(x, default = tuple()) -> tuple | None: ...

@make(COLUMNS, otype=isshaped)
def getcolumns(x) -> DataType | None: ...

@make('df', check=isdf)
def getdf(x, default = None) -> DataType | None: ...


# %% ../nbs/10_attr.ipynb 9
@make(KERNEL, check=isdata)
def getkernel(x, default = None) -> DataType | None: ...

@make(KERNEL_DEGREE, check=isdata)
def getkdegree(x, default =  None) -> DataType | None: ...

@make(AFFINITY, check=isdata)
def getaffinity(x, default =  None) -> DataType | None: ...

@make(DIFF_OP, check=isdata)
def getdiffop(x, default =  None) -> DataType | None: ...

@make(DATA, check=isdata, default=empty)
def getdata(x, default =  None) -> DataType | None: ...

@make(GRAPH, check=isgraph)
def getgraph(p: PHATE, default =  None) -> DataType | None: ...

@make(CLUSTERS, check=isdata)
def getclusters(x, default =  None) -> DataType | None: ...

@make(EMBEDDING, check=isdata)
def getembedding(x, default =  None) -> DataType | None: ...

@make(CENTROIDS,check=isdata)
def getcentroids(x, default =  None) -> DataType | None: ...

@make(DIFF_POTENTIAL, check=isdata)
def getdiffpot(p: PHATE, default =  None) -> DataType | None: ...
