# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/pstr',
                'doc_host': 'https://dsm-72.github.io',
                'git_url': 'https://github.com/dsm-72/pstr',
                'lib_path': 'pstr'},
  'syms': { 'pstr.chck': { 'pstr.chck.ischars': ('chck.html#ischars', 'pstr/chck.py'),
                           'pstr.chck.isuniq': ('chck.html#isuniq', 'pstr/chck.py')},
            'pstr.enum.cell': {'pstr.enum.cell.FilterMatrixFiles': ('04_enum/cell.html#filtermatrixfiles', 'pstr/enum/cell.py')},
            'pstr.enum.path': { 'pstr.enum.path.EntryType': ('04_enum/path.html#entrytype', 'pstr/enum/path.py'),
                                'pstr.enum.path.EntryType.kinds': ('04_enum/path.html#entrytype.kinds', 'pstr/enum/path.py'),
                                'pstr.enum.path.PathLibType': ('04_enum/path.html#pathlibtype', 'pstr/enum/path.py'),
                                'pstr.enum.path.PathLibType.__str__': ('04_enum/path.html#pathlibtype.__str__', 'pstr/enum/path.py'),
                                'pstr.enum.path.PathLibType.addcls': ('04_enum/path.html#pathlibtype.addcls', 'pstr/enum/path.py'),
                                'pstr.enum.path.PathLibType.is_psx': ('04_enum/path.html#pathlibtype.is_psx', 'pstr/enum/path.py'),
                                'pstr.enum.path.PathLibType.is_wdx': ('04_enum/path.html#pathlibtype.is_wdx', 'pstr/enum/path.py'),
                                'pstr.enum.path.PathLibType.oscomp': ('04_enum/path.html#pathlibtype.oscomp', 'pstr/enum/path.py'),
                                'pstr.enum.path.PathLibType.ostype': ('04_enum/path.html#pathlibtype.ostype', 'pstr/enum/path.py'),
                                'pstr.enum.path.PathLibType.pthcls': ('04_enum/path.html#pathlibtype.pthcls', 'pstr/enum/path.py')},
            'pstr.enum.tree': { 'pstr.enum.tree.TreeStr': ('04_enum/tree.html#treestr', 'pstr/enum/tree.py'),
                                'pstr.enum.tree.TreeStr.join': ('04_enum/tree.html#treestr.join', 'pstr/enum/tree.py'),
                                'pstr.enum.tree.TreeStr.next': ('04_enum/tree.html#treestr.next', 'pstr/enum/tree.py')},
            'pstr.enum.unit': { 'pstr.enum.unit.ExpInfo': ('04_enum/unit.html#expinfo', 'pstr/enum/unit.py'),
                                'pstr.enum.unit.Unit': ('04_enum/unit.html#unit', 'pstr/enum/unit.py')},
            'pstr.filt': { 'pstr.filt.allbut': ('filt.html#allbut', 'pstr/filt.py'),
                           'pstr.filt.drop': ('filt.html#drop', 'pstr/filt.py'),
                           'pstr.filt.dropnils': ('filt.html#dropnils', 'pstr/filt.py'),
                           'pstr.filt.droppunc': ('filt.html#droppunc', 'pstr/filt.py'),
                           'pstr.filt.dropquote': ('filt.html#dropquote', 'pstr/filt.py'),
                           'pstr.filt.endpart': ('filt.html#endpart', 'pstr/filt.py'),
                           'pstr.filt.filt': ('filt.html#filt', 'pstr/filt.py'),
                           'pstr.filt.just': ('filt.html#just', 'pstr/filt.py'),
                           'pstr.filt.justabc': ('filt.html#justabc', 'pstr/filt.py'),
                           'pstr.filt.justnum': ('filt.html#justnum', 'pstr/filt.py'),
                           'pstr.filt.justpunc': ('filt.html#justpunc', 'pstr/filt.py'),
                           'pstr.filt.makefilt': ('filt.html#makefilt', 'pstr/filt.py'),
                           'pstr.filt.midpart': ('filt.html#midpart', 'pstr/filt.py'),
                           'pstr.filt.prepart': ('filt.html#prepart', 'pstr/filt.py'),
                           'pstr.filt.splitget': ('filt.html#splitget', 'pstr/filt.py')},
            'pstr.fmts.byte': { 'pstr.fmts.byte.fmtbyte': ('03_fmts/byte.html#fmtbyte', 'pstr/fmts/byte.py'),
                                'pstr.fmts.byte.getexp': ('03_fmts/byte.html#getexp', 'pstr/fmts/byte.py'),
                                'pstr.fmts.byte.getidx': ('03_fmts/byte.html#getidx', 'pstr/fmts/byte.py'),
                                'pstr.fmts.byte.getnum': ('03_fmts/byte.html#getnum', 'pstr/fmts/byte.py'),
                                'pstr.fmts.byte.getsuf': ('03_fmts/byte.html#getsuf', 'pstr/fmts/byte.py')},
            'pstr.fmts.numb': {'pstr.fmts.numb.fmtnumb': ('03_fmts/numb.html#fmtnumb', 'pstr/fmts/numb.py')},
            'pstr.fmts.path': { 'pstr.fmts.path.fmtpath': ('03_fmts/path.html#fmtpath', 'pstr/fmts/path.py'),
                                'pstr.fmts.path.format_base_path': ('03_fmts/path.html#format_base_path', 'pstr/fmts/path.py'),
                                'pstr.fmts.path.format_rich_path': ('03_fmts/path.html#format_rich_path', 'pstr/fmts/path.py')},
            'pstr.fmts.unit': {'pstr.fmts.unit.fmtunit': ('03_fmts/unit.html#fmtunit', 'pstr/fmts/unit.py')},
            'pstr.fuzz': { 'pstr.fuzz.fuzzfind': ('fuzz.html#fuzzfind', 'pstr/fuzz.py'),
                           'pstr.fuzz.keymatch': ('fuzz.html#keymatch', 'pstr/fuzz.py'),
                           'pstr.fuzz.strmatch': ('fuzz.html#strmatch', 'pstr/fuzz.py')},
            'pstr.join': { 'pstr.join.charjoin': ('join.html#charjoin', 'pstr/join.py'),
                           'pstr.join.d_str': ('join.html#d_str', 'pstr/join.py'),
                           'pstr.join.dashstr': ('join.html#dashstr', 'pstr/join.py'),
                           'pstr.join.dotstr': ('join.html#dotstr', 'pstr/join.py'),
                           'pstr.join.dunstr': ('join.html#dunstr', 'pstr/join.py'),
                           'pstr.join.dustr': ('join.html#dustr', 'pstr/join.py'),
                           'pstr.join.nilstr': ('join.html#nilstr', 'pstr/join.py'),
                           'pstr.join.s_str': ('join.html#s_str', 'pstr/join.py'),
                           'pstr.join.splitjoin': ('join.html#splitjoin', 'pstr/join.py'),
                           'pstr.join.stripjoin': ('join.html#stripjoin', 'pstr/join.py'),
                           'pstr.join.sunstr': ('join.html#sunstr', 'pstr/join.py'),
                           'pstr.join.u1str': ('join.html#u1str', 'pstr/join.py'),
                           'pstr.join.u2str': ('join.html#u2str', 'pstr/join.py'),
                           'pstr.join.ustr': ('join.html#ustr', 'pstr/join.py')},
            'pstr.nchr.core': {},
            'pstr.nlit.args': {},
            'pstr.nlit.byte': {},
            'pstr.nlit.cell': {},
            'pstr.nlit.docs': {},
            'pstr.nlit.dund': {},
            'pstr.nlit.expr': {},
            'pstr.nlit.exts': {},
            'pstr.nlit.mods': {},
            'pstr.nlit.path': {},
            'pstr.nlit.plot': {},
            'pstr.nlit.sund': {},
            'pstr.nlit.tens': {},
            'pstr.nlit.tree': {},
            'pstr.nlit.unit': {},
            'pstr.nlit.vstr': {},
            'pstr.path': { 'pstr.path.dropext': ('path.html#dropext', 'pstr/path.py'),
                           'pstr.path.getuser': ('path.html#getuser', 'pstr/path.py'),
                           'pstr.path.hasext': ('path.html#hasext', 'pstr/path.py'),
                           'pstr.path.hideuser': ('path.html#hideuser', 'pstr/path.py'),
                           'pstr.path.urljoin': ('path.html#urljoin', 'pstr/path.py')},
            'pstr.pttn': {},
            'pstr.repl': { 'pstr.repl.joinall': ('repl.html#joinall', 'pstr/repl.py'),
                           'pstr.repl.singlespaced': ('repl.html#singlespaced', 'pstr/repl.py'),
                           'pstr.repl.swapall': ('repl.html#swapall', 'pstr/repl.py')},
            'pstr.sens': {'pstr.sens.sens': ('sens.html#sens', 'pstr/sens.py')},
            'pstr.snek': { 'pstr.snek.py_to_snake': ('snek.html#py_to_snake', 'pstr/snek.py'),
                           'pstr.snek.snek': ('snek.html#snek', 'pstr/snek.py')},
            'pstr.util': { 'pstr.util.getcard': ('util.html#getcard', 'pstr/util.py'),
                           'pstr.util.is1char': ('util.html#is1char', 'pstr/util.py'),
                           'pstr.util.iscard': ('util.html#iscard', 'pstr/util.py'),
                           'pstr.util.pluralize': ('util.html#pluralize', 'pstr/util.py'),
                           'pstr.util.todunder': ('util.html#todunder', 'pstr/util.py')},
            'pstr.util.core': { 'pstr.util.core.axeschars': ('05_util/core.html#axeschars', 'pstr/util/core.py'),
                                'pstr.util.core.caststrs': ('05_util/core.html#caststrs', 'pstr/util/core.py'),
                                'pstr.util.core.getcard': ('05_util/core.html#getcard', 'pstr/util/core.py'),
                                'pstr.util.core.is1char': ('05_util/core.html#is1char', 'pstr/util/core.py'),
                                'pstr.util.core.iscard': ('05_util/core.html#iscard', 'pstr/util/core.py'),
                                'pstr.util.core.safeattr': ('05_util/core.html#safeattr', 'pstr/util/core.py'),
                                'pstr.util.core.shiftchars': ('05_util/core.html#shiftchars', 'pstr/util/core.py'),
                                'pstr.util.core.todunder': ('05_util/core.html#todunder', 'pstr/util/core.py'),
                                'pstr.util.core.tomangled': ('05_util/core.html#tomangled', 'pstr/util/core.py'),
                                'pstr.util.core.toprivate': ('05_util/core.html#toprivate', 'pstr/util/core.py'),
                                'pstr.util.core.tosunder': ('05_util/core.html#tosunder', 'pstr/util/core.py')},
            'pstr.util.exts': { 'pstr.util.exts.isgz': ('05_util/exts.html#isgz', 'pstr/util/exts.py'),
                                'pstr.util.exts.istar': ('05_util/exts.html#istar', 'pstr/util/exts.py'),
                                'pstr.util.exts.istarball': ('05_util/exts.html#istarball', 'pstr/util/exts.py'),
                                'pstr.util.exts.istargz': ('05_util/exts.html#istargz', 'pstr/util/exts.py')},
            'pstr.util.path': { 'pstr.util.path.dropext': ('05_util/path.html#dropext', 'pstr/util/path.py'),
                                'pstr.util.path.getuser': ('05_util/path.html#getuser', 'pstr/util/path.py'),
                                'pstr.util.path.hasext': ('05_util/path.html#hasext', 'pstr/util/path.py'),
                                'pstr.util.path.hideuser': ('05_util/path.html#hideuser', 'pstr/util/path.py'),
                                'pstr.util.path.urljoin': ('05_util/path.html#urljoin', 'pstr/util/path.py')}}}
