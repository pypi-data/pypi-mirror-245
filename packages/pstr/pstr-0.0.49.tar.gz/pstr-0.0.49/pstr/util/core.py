# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/05_util/01_core.ipynb.

# %% auto 0
__all__ = ['toprivate', 'tomangled', 'tosunder', 'todunder', 'caststrs', 'getcard', 'iscard', 'is1char', 'shiftchars',
           'axeschars', 'safeattr']

# %% ../../nbs/05_util/01_core.ipynb 4
import re, string, itertools

# %% ../../nbs/05_util/01_core.ipynb 5
from nchr import U1, U2, NIL
from chck import isprivate, ismangled, issunder, isdunder

# %% ../../nbs/05_util/01_core.ipynb 6
from pttn.cons import PUNC, ATTR

# %% ../../nbs/05_util/01_core.ipynb 7
from atup import argtup

# %% ../../nbs/05_util/01_core.ipynb 8
def toprivate(s: str) -> str:
    return f'{U1}{s}' if not isprivate(s) else s

def tomangled(s: str) -> str:
    return f'{U2}{s}' if not ismangled(s) else s

def tosunder(s: str) -> str:
    return f'{U1}{s}{U1}' if not issunder(s) else s

def todunder(s: str) -> str:
    return f'{U2}{s}{U2}' if not isdunder(s) else s

# %% ../../nbs/05_util/01_core.ipynb 9
def caststrs(*strs: str) -> tuple:
    return tuple(map(str, tuple(argtup(strs))))

# %% ../../nbs/05_util/01_core.ipynb 10
def getcard(s: str) -> int:
    '''Returns the cardinality of the set of characters for the string.'''
    return len(set(s))

def iscard(s: str, n: int = 1) -> bool:
    '''Checks if a string is composed of a set of `n` characters.'''
    return getcard(s) == n

def is1char(s: str) -> bool:
    '''Checks if a string is composed of a single unique character.'''
    return iscard(s, 1)

# %% ../../nbs/05_util/01_core.ipynb 11
def shiftchars(start: str = 'x', chars: str = string.ascii_lowercase) -> str:    
    shift = len(chars) - chars.index(start)
    beg = 1 * len(chars) - shift
    end = 2 * len(chars) - shift    
    return NIL.join(itertools.islice(itertools.cycle(chars), beg, end))

def axeschars(n: int, start: str = 'x') -> str:
    return shiftchars(start, string.ascii_lowercase)[:n]

# %% ../../nbs/05_util/01_core.ipynb 12
def safeattr(name: str) -> str:
    return re.sub(ATTR, NIL, re.sub(PUNC, U1, name))

# %% ../../nbs/05_util/01_core.ipynb 13
#| export

