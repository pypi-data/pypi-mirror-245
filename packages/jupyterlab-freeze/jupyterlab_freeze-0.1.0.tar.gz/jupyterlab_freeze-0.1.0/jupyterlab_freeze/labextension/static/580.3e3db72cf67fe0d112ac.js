"use strict";(self.webpackChunkjupyterlab_freeze=self.webpackChunkjupyterlab_freeze||[]).push([[580],{580:(e,t,a)=>{a.r(t),a.d(t,{default:()=>b});var o=a(122),l=a(714),n=a(85),r=a(29),d=a.n(r),s=a(434);function i(e){return c(e)?!0===e.model.getMetadata("frozen")?"frozen":!1===e.model.getMetadata("editable")?"read_only":"normal":"normal"}function c(e){return"code"==e.model.type||"markdown"==e.model.type}function m(e,t){if(c(t)){switch(e){case"normal":t.model.setMetadata("editable",!0),t.model.setMetadata("deletable",!0),t.model.setMetadata("frozen",!1),t.removeClass("jp-mod-frozen"),t.removeClass("jp-mod-frozen-readonly");break;case"read_only":t.model.setMetadata("editable",!1),t.model.setMetadata("deletable",!1),t.model.setMetadata("frozen",!1),t.removeClass("jp-mod-frozen"),t.addClass("jp-mod-frozen-readonly");break;case"frozen":t.model.setMetadata("editable",!1),t.model.setMetadata("deletable",!1),t.model.setMetadata("frozen",!0),t.addClass("jp-mod-frozen"),t.removeClass("jp-mod-frozen-readonly")}t.update()}}const u=e=>{function t(t){let a=e.notebook.content,o=a.widgets[a.activeCellIndex];o&&(m(t,o),e.notebook.update())}return d().createElement(d().Fragment,null,d().createElement("div",{title:"Lift restrictions from selected cells"},d().createElement("button",{className:"jp-ToolbarButtonComponent jp-mod-minimal jp-Button","aria-pressed":"false","aria-disabled":"false",onClick:()=>t("normal")},d().createElement(s.jcU,null))),d().createElement("div",{title:"Make selected cells read-only"},d().createElement("button",{className:"jp-ToolbarButtonComponent jp-mod-minimal jp-Button","aria-pressed":"false","aria-disabled":"false",onClick:()=>t("read_only")},d().createElement(s.kUi,null))),d().createElement("div",{title:"Freeze selected cells"},d().createElement("button",{className:"jp-ToolbarButtonComponent jp-mod-minimal jp-Button","aria-pressed":"false","aria-disabled":"false",onClick:()=>t("frozen")},d().createElement(s.pKb,null))))};class p extends n.ReactWidget{constructor(e){super(),this.notebook=e,this.notebook.context.ready.then((()=>{var e;let t=this.notebook.content;const a=(null===(e=t.model)||void 0===e?void 0:e.cells.length)||0;for(var o=0;o<a;o++){let e=t.widgets[o];m(i(e),e)}this.notebook.update()}))}render(){return d().createElement(u,{notebook:this.notebook})}}const f=l.CodeCell.execute;l.CodeCell.execute=async function(e,t,a){if(!e.model.getMetadata("frozen"))return f(e,t,a)};const b={id:"jupyterlab-freeze:plugin",description:"Jupyterlab version of freeze extension",autoStart:!0,requires:[o.INotebookTracker],activate:(e,t)=>{console.log("JupyterLab extension jupyterlab-freeze is activated!"),t.widgetAdded.connect(((e,t)=>{const a=t.toolbar,o=new p(t);a.addItem("freeze",o),t.disposed.connect((()=>{o.dispose()}))}))}}}}]);